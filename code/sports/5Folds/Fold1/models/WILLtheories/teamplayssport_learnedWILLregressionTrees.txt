useStdLogicNotation: true.

% maxTreeDepthInNodes                 = 5
% maxTreeDepthInLiterals              = 12
% maxNumberOfLiteralsAtAnInteriorNode = 1
% maxFreeBridgersInBody               = 1
% maxNumberOfClauses                  = 12
% maxNodesToConsider                  = 10
% maxNodesToCreate                    = 10,000
% maxAcceptableNodeScoreToStop        = 0.003
% negPosRatio                         = 2.000
% testNegPosRatio                     = -1.000
% # of pos examples                   = 600
% # of neg examples                   = 0



%%%%%  WILL-Produced Tree #1 @ 10:50:31 6/4/18.  [Using 27,435,592 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysinleague(a, e) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.02219137928098129;  // std dev = 4.306, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | | | | else return 0.03955022982732932;  // std dev = 1.733, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.0193208311838759;  // std dev = 2.805, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.07312765945550136;  // std dev = 0.538, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19069976335544714;  // std dev = 0.495, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(f, a) )
%   | | then return -2.1454863114233526E-4;  // std dev = 0.355, 155.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=23 */
%   | | else if ( plays(g, a) )
%   | | | then return -0.009181498119101943;  // std dev = 4.17e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else if ( teamplaysinleague(a, h) )
%   | | | | then if ( teamplaysinleague(c, h) )
%   | | | | | then return 0.13573257760644242;  // std dev = 2.785, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | | | else return 0.008013898548558324;  // std dev = 2.678, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | | else if ( teamplaysagainstteam(i, a) )
%   | | | | | then return 0.03192865994825585;  // std dev = 0.815, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.023353671228504166;  // std dev = 3.313, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.1268134709155253;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, 0.02219137928098129) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #1.

teamplayssport(a, b, 0.03955022982732932) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.0193208311838759) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #3.

teamplayssport(a, b, 0.07312765945550136) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #4.

teamplayssport(a, b, 0.19069976335544714) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 0.8581489350995121) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, -2.1454863114233526E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #7.

teamplayssport(a, b, -0.009181498119101943) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #8.

teamplayssport(a, b, 0.13573257760644242) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #9.

teamplayssport(a, b, 0.008013898548558324) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.03192865994825585) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.023353671228504166) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.1268134709155253) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar1) ^
   teamplaysagainstteam(UniqueVar1, A) ^
   athleteplaysforteam(Underscore, UniqueVar1) ^
   teamplaysinleague(UniqueVar1, UniqueVar2) ^
   teamplaysinleague(A, UniqueVar2) ^
   teamplaysagainstteam(A, UniqueVar1) ^
   ! => 
   teamplayssport(A, B, 0.02219137928098129). // Flattened version of clause #1.

flattened_plays(B, UniqueVar3) ^
   teamplaysagainstteam(UniqueVar3, A) ^
   athleteplaysforteam(Underscore, UniqueVar3) ^
   teamplaysinleague(UniqueVar3, UniqueVar4) ^
   teamplaysinleague(A, UniqueVar4) ^
   ! => 
   teamplayssport(A, B, 0.03955022982732932). // Flattened version of clause #2.

flattened_plays(B, UniqueVar5) ^
   teamplaysagainstteam(UniqueVar5, A) ^
   athleteplaysforteam(Underscore, UniqueVar5) ^
   teamplaysinleague(UniqueVar5, Underscore) ^
   teamplaysagainstteam(A, UniqueVar5) ^
   ! => 
   teamplayssport(A, B, 0.0193208311838759). // Flattened version of clause #3.

flattened_plays(B, UniqueVar6) ^
   teamplaysagainstteam(UniqueVar6, A) ^
   athleteplaysforteam(Underscore, UniqueVar6) ^
   teamplaysinleague(UniqueVar6, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.07312765945550136). // Flattened version of clause #4.

flattened_plays(B, UniqueVar7) ^
   teamplaysagainstteam(UniqueVar7, A) ^
   athleteplaysforteam(Underscore, UniqueVar7) ^
   ! => 
   teamplayssport(A, B, 0.19069976335544714). // Flattened version of clause #5.

flattened_plays(B, UniqueVar8) ^
   teamplaysagainstteam(UniqueVar8, A) ^
   ! => 
   teamplayssport(A, B, 0.8581489350995121). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -2.1454863114233526E-4). // Flattened version of clause #7.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009181498119101943). // Flattened version of clause #8.

flattened_plays(B, UniqueVar9) ^
   teamplaysinleague(A, UniqueVar10) ^
   teamplaysinleague(UniqueVar9, UniqueVar10) ^
   ! => 
   teamplayssport(A, B, 0.13573257760644242). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.008013898548558324). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.03192865994825585). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023353671228504166). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.1268134709155253). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(UniqueVar3, A)
%   teamplaysinleague(UniqueVar9, UniqueVar10)
%   athleteplaysforteam(Underscore, UniqueVar3)
%   plays(B, UniqueVar8)
%   plays(B, UniqueVar5)
%   teamplaysagainstteam(A, UniqueVar5)
%   teamplaysagainstteam(Underscore, A)
%   athleteplaysforteam(Underscore, UniqueVar5)
%   plays(B, UniqueVar3)
%   teamplaysagainstteam(UniqueVar8, A)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(UniqueVar5, Underscore)
%   teamplaysagainstteam(UniqueVar1, A)
%   teamplaysagainstteam(A, UniqueVar1)
%   athleteplaysforteam(Underscore, UniqueVar1)
%   teamplaysinleague(UniqueVar3, UniqueVar4)
%   teamplaysinleague(A, UniqueVar4)
%   plays(B, UniqueVar7)
%   plays(B, UniqueVar1)
%   athleteplaysforteam(Underscore, UniqueVar7)
%   plays(B, UniqueVar9)
%   teamplaysinleague(UniqueVar1, UniqueVar2)
%   plays(Underscore, A)
%   teamplaysagainstteam(UniqueVar5, A)
%   teamplaysinleague(UniqueVar6, Underscore)
%   teamplaysinleague(A, UniqueVar10)
%   teamplaysinleague(A, Underscore)
%   athleteplaysforteam(Underscore, UniqueVar6)
%   teamplaysinleague(A, UniqueVar2)
%   teamplaysagainstteam(UniqueVar6, A)
%   plays(B, UniqueVar6)
%   plays(B, Underscore)
%   teamplaysagainstteam(UniqueVar7, A)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #2 @ 10:50:39 6/4/18.  [Using 27,575,264 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008811564458323921;  // std dev = 7.21e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20563003326313714;  // std dev = 4.680, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5554260639938222;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.855426063993822;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13501579048248777;  // std dev = 3.107, 75.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return 0.0021515457663117883;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(f, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(f, g) )
%   | | | | | then return 0.0259169264236146;  // std dev = 1.745, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19203442252922534;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.194764220796163E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, h) )
%   | | | | then if ( plays(b, h) )
%   | | | | | then return 0.03624686711838229;  // std dev = 0.579, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.02315108112978858;  // std dev = 1.038, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.023567037865051647;  // std dev = 0.498, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.12953634202121583;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008811564458323921) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20563003326313714) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5554260639938222) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.855426063993822) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, c), 
     !. // Clause #4.

teamplayssport(a, b, 0.13501579048248777) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0021515457663117883) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.0259169264236146) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19203442252922534) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.194764220796163E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03624686711838229) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.02315108112978858) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.023567037865051647) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12953634202121583) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008811564458323921). // Flattened version of clause #1.

flattened_plays(B, UniqueVar11) ^
   teamplaysinleague(A, UniqueVar12) ^
   teamplaysinleague(UniqueVar11, UniqueVar12) ^
   teamplaysagainstteam(UniqueVar11, A) ^
   teamplaysagainstteam(A, UniqueVar11) ^
   ! => 
   teamplayssport(A, B, 0.20563003326313714). // Flattened version of clause #2.

flattened_plays(B, UniqueVar13) ^
   teamplaysinleague(A, UniqueVar14) ^
   teamplaysinleague(UniqueVar13, UniqueVar14) ^
   teamplaysagainstteam(UniqueVar13, A) ^
   ! => 
   teamplayssport(A, B, 0.5554260639938222). // Flattened version of clause #3.

flattened_plays(B, UniqueVar15) ^
   teamplaysinleague(A, UniqueVar16) ^
   teamplaysinleague(UniqueVar15, UniqueVar16) ^
   teamplaysagainstteam(A, UniqueVar15) ^
   ! => 
   teamplayssport(A, B, 0.855426063993822). // Flattened version of clause #4.

flattened_plays(B, UniqueVar17) ^
   teamplaysinleague(A, UniqueVar18) ^
   teamplaysinleague(UniqueVar17, UniqueVar18) ^
   ! => 
   teamplayssport(A, B, 0.13501579048248777). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0021515457663117883). // Flattened version of clause #6.

flattened_plays(B, UniqueVar19) ^
   athleteplaysforteam(UniqueVar20, A) ^
   teamplaysagainstteam(A, UniqueVar19) ^
   athleteplayssport(UniqueVar20, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0259169264236146). // Flattened version of clause #7.

flattened_plays(B, UniqueVar21) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar21) ^
   ! => 
   teamplayssport(A, B, 0.19203442252922534). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.194764220796163E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, UniqueVar22) ^
   plays(B, UniqueVar22) ^
   ! => 
   teamplayssport(A, B, 0.03624686711838229). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02315108112978858). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023567037865051647). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12953634202121583). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(A, UniqueVar11)
%   teamplaysinleague(A, UniqueVar14)
%   plays(B, UniqueVar15)
%   teamplaysinleague(A, UniqueVar18)
%   plays(B, UniqueVar11)
%   teamplaysinleague(UniqueVar11, UniqueVar12)
%   teamplaysinleague(A, UniqueVar16)
%   athleteplaysforteam(Underscore, A)
%   plays(B, UniqueVar19)
%   athleteplaysforteam(UniqueVar20, A)
%   teamplaysagainstteam(A, UniqueVar22)
%   teamplaysagainstteam(UniqueVar13, A)
%   plays(B, UniqueVar13)
%   teamplaysagainstteam(A, UniqueVar19)
%   teamplaysinleague(A, UniqueVar12)
%   teamplaysagainstteam(A, UniqueVar21)
%   plays(Underscore, A)
%   teamplaysagainstteam(UniqueVar11, A)
%   athleteplayssport(UniqueVar20, Underscore)
%   plays(B, UniqueVar17)
%   teamplaysinleague(UniqueVar17, UniqueVar18)
%   plays(B, UniqueVar22)
%   plays(B, UniqueVar21)
%   teamplaysinleague(A, Underscore)
%   teamplaysinleague(UniqueVar13, UniqueVar14)
%   teamplaysinleague(UniqueVar15, UniqueVar16)
%   teamplaysagainstteam(A, UniqueVar15)
%   plays(B, Underscore)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #3 @ 10:50:47 6/4/18.  [Using 27,747,256 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008745353831632921;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20592630706491521;  // std dev = 4.685, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5565124012670075;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.8565124012670076;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13520708412186935;  // std dev = 3.109, 75.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return 0.0022244954556038944;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(f, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(f, g) )
%   | | | | | then return 0.025953057375050933;  // std dev = 1.746, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19227829416198128;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.100155135394298E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(h, a) )
%   | | | | then if ( plays(b, h) )
%   | | | | | then return 0.03629289835877151;  // std dev = 0.579, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.03185387793869107;  // std dev = 0.816, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | else return 0.023277713218401927;  // std dev = 0.499, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.12845000474803003;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008745353831632921) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20592630706491521) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5565124012670075) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.8565124012670076) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, c), 
     !. // Clause #4.

teamplayssport(a, b, 0.13520708412186935) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0022244954556038944) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025953057375050933) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19227829416198128) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.100155135394298E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03629289835877151) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.03185387793869107) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.023277713218401927) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12845000474803003) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008745353831632921). // Flattened version of clause #1.

flattened_plays(B, UniqueVar23) ^
   teamplaysinleague(A, UniqueVar24) ^
   teamplaysinleague(UniqueVar23, UniqueVar24) ^
   teamplaysagainstteam(UniqueVar23, A) ^
   teamplaysagainstteam(A, UniqueVar23) ^
   ! => 
   teamplayssport(A, B, 0.20592630706491521). // Flattened version of clause #2.

flattened_plays(B, UniqueVar25) ^
   teamplaysinleague(A, UniqueVar26) ^
   teamplaysinleague(UniqueVar25, UniqueVar26) ^
   teamplaysagainstteam(UniqueVar25, A) ^
   ! => 
   teamplayssport(A, B, 0.5565124012670075). // Flattened version of clause #3.

flattened_plays(B, UniqueVar27) ^
   teamplaysinleague(A, UniqueVar28) ^
   teamplaysinleague(UniqueVar27, UniqueVar28) ^
   teamplaysagainstteam(A, UniqueVar27) ^
   ! => 
   teamplayssport(A, B, 0.8565124012670076). // Flattened version of clause #4.

flattened_plays(B, UniqueVar29) ^
   teamplaysinleague(A, UniqueVar30) ^
   teamplaysinleague(UniqueVar29, UniqueVar30) ^
   ! => 
   teamplayssport(A, B, 0.13520708412186935). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0022244954556038944). // Flattened version of clause #6.

flattened_plays(B, UniqueVar31) ^
   athleteplaysforteam(UniqueVar32, A) ^
   teamplaysagainstteam(A, UniqueVar31) ^
   athleteplayssport(UniqueVar32, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025953057375050933). // Flattened version of clause #7.

flattened_plays(B, UniqueVar33) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar33) ^
   ! => 
   teamplayssport(A, B, 0.19227829416198128). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.100155135394298E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(UniqueVar34, A) ^
   plays(B, UniqueVar34) ^
   ! => 
   teamplayssport(A, B, 0.03629289835877151). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.03185387793869107). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023277713218401927). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12845000474803003). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(A, UniqueVar27)
%   teamplaysagainstteam(Underscore, A)
%   plays(B, UniqueVar27)
%   teamplaysagainstteam(A, UniqueVar31)
%   plays(B, UniqueVar34)
%   teamplaysinleague(A, UniqueVar28)
%   teamplaysagainstteam(UniqueVar25, A)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(A, UniqueVar24)
%   teamplaysinleague(A, UniqueVar30)
%   plays(B, UniqueVar31)
%   plays(B, UniqueVar29)
%   teamplaysagainstteam(UniqueVar23, A)
%   teamplaysinleague(UniqueVar25, UniqueVar26)
%   teamplaysinleague(A, UniqueVar26)
%   plays(B, UniqueVar23)
%   plays(B, UniqueVar25)
%   teamplaysagainstteam(A, UniqueVar23)
%   athleteplaysforteam(UniqueVar32, A)
%   plays(Underscore, A)
%   teamplaysinleague(UniqueVar29, UniqueVar30)
%   teamplaysinleague(UniqueVar27, UniqueVar28)
%   teamplaysagainstteam(UniqueVar34, A)
%   athleteplayssport(UniqueVar32, Underscore)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar33)
%   teamplaysinleague(UniqueVar23, UniqueVar24)
%   plays(B, Underscore)
%   teamplaysagainstteam(A, UniqueVar33)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #4 @ 10:50:59 6/4/18.  [Using 27,747,152 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysinleague(a, e) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.022174266866405508;  // std dev = 4.304, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | | | | else return 0.03950557880224828;  // std dev = 1.733, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.019302504862646536;  // std dev = 2.804, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.07306487203171189;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1905741885078682;  // std dev = 0.495, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8575838482854069;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(f, a) )
%   | | then return -2.181638408168912E-4;  // std dev = 0.355, 155.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=23 */
%   | | else if ( plays(g, a) )
%   | | | then return -0.009218074111848116;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else if ( teamplaysinleague(a, h) )
%   | | | | then if ( teamplaysinleague(c, h) )
%   | | | | | then return 0.13563076416786635;  // std dev = 2.784, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | | | else return 0.007970430332088694;  // std dev = 2.679, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | | else if ( teamplaysagainstteam(i, a) )
%   | | | | | then return 0.031902838100459;  // std dev = 0.815, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.023327443313699167;  // std dev = 3.313, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.1273785577296308;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, 0.022174266866405508) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #1.

teamplayssport(a, b, 0.03950557880224828) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.019302504862646536) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #3.

teamplayssport(a, b, 0.07306487203171189) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #4.

teamplayssport(a, b, 0.1905741885078682) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 0.8575838482854069) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, -2.181638408168912E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #7.

teamplayssport(a, b, -0.009218074111848116) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #8.

teamplayssport(a, b, 0.13563076416786635) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #9.

teamplayssport(a, b, 0.007970430332088694) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.031902838100459) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.023327443313699167) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.1273785577296308) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar35) ^
   teamplaysagainstteam(UniqueVar35, A) ^
   athleteplaysforteam(Underscore, UniqueVar35) ^
   teamplaysinleague(UniqueVar35, UniqueVar36) ^
   teamplaysinleague(A, UniqueVar36) ^
   teamplaysagainstteam(A, UniqueVar35) ^
   ! => 
   teamplayssport(A, B, 0.022174266866405508). // Flattened version of clause #1.

flattened_plays(B, UniqueVar37) ^
   teamplaysagainstteam(UniqueVar37, A) ^
   athleteplaysforteam(Underscore, UniqueVar37) ^
   teamplaysinleague(UniqueVar37, UniqueVar38) ^
   teamplaysinleague(A, UniqueVar38) ^
   ! => 
   teamplayssport(A, B, 0.03950557880224828). // Flattened version of clause #2.

flattened_plays(B, UniqueVar39) ^
   teamplaysagainstteam(UniqueVar39, A) ^
   athleteplaysforteam(Underscore, UniqueVar39) ^
   teamplaysinleague(UniqueVar39, Underscore) ^
   teamplaysagainstteam(A, UniqueVar39) ^
   ! => 
   teamplayssport(A, B, 0.019302504862646536). // Flattened version of clause #3.

flattened_plays(B, UniqueVar40) ^
   teamplaysagainstteam(UniqueVar40, A) ^
   athleteplaysforteam(Underscore, UniqueVar40) ^
   teamplaysinleague(UniqueVar40, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.07306487203171189). // Flattened version of clause #4.

flattened_plays(B, UniqueVar41) ^
   teamplaysagainstteam(UniqueVar41, A) ^
   athleteplaysforteam(Underscore, UniqueVar41) ^
   ! => 
   teamplayssport(A, B, 0.1905741885078682). // Flattened version of clause #5.

flattened_plays(B, UniqueVar42) ^
   teamplaysagainstteam(UniqueVar42, A) ^
   ! => 
   teamplayssport(A, B, 0.8575838482854069). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -2.181638408168912E-4). // Flattened version of clause #7.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009218074111848116). // Flattened version of clause #8.

flattened_plays(B, UniqueVar43) ^
   teamplaysinleague(A, UniqueVar44) ^
   teamplaysinleague(UniqueVar43, UniqueVar44) ^
   ! => 
   teamplayssport(A, B, 0.13563076416786635). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.007970430332088694). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.031902838100459). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023327443313699167). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.1273785577296308). // Flattened version of clause #13.


% The unique flattened literals:
%   athleteplaysforteam(Underscore, UniqueVar37)
%   teamplaysagainstteam(UniqueVar42, A)
%   teamplaysagainstteam(Underscore, A)
%   plays(B, UniqueVar37)
%   teamplaysagainstteam(UniqueVar35, A)
%   athleteplaysforteam(Underscore, A)
%   plays(B, UniqueVar40)
%   teamplaysinleague(A, UniqueVar44)
%   teamplaysinleague(UniqueVar40, Underscore)
%   plays(B, UniqueVar43)
%   teamplaysinleague(A, UniqueVar38)
%   athleteplaysforteam(Underscore, UniqueVar40)
%   teamplaysinleague(UniqueVar43, UniqueVar44)
%   athleteplaysforteam(Underscore, UniqueVar35)
%   plays(Underscore, A)
%   teamplaysinleague(UniqueVar39, Underscore)
%   plays(B, UniqueVar39)
%   plays(B, UniqueVar42)
%   teamplaysagainstteam(UniqueVar41, A)
%   teamplaysinleague(UniqueVar37, UniqueVar38)
%   plays(B, UniqueVar35)
%   athleteplaysforteam(Underscore, UniqueVar41)
%   teamplaysagainstteam(A, UniqueVar39)
%   teamplaysagainstteam(UniqueVar40, A)
%   athleteplaysforteam(Underscore, UniqueVar39)
%   teamplaysagainstteam(A, UniqueVar35)
%   teamplaysinleague(UniqueVar35, UniqueVar36)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar41)
%   teamplaysagainstteam(UniqueVar39, A)
%   teamplaysinleague(A, UniqueVar36)
%   plays(B, Underscore)
%   teamplaysagainstteam(UniqueVar37, A)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #5 @ 10:51:07 6/4/18.  [Using 27,786,400 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008846425527903413;  // std dev = 5.59e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.2054740398503797;  // std dev = 4.678, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5548540881470438;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.8548540881470437;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13491507098765937;  // std dev = 3.107, 75.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return 0.00211313646071674;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(f, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(f, g) )
%   | | | | | then return 0.025897902836692934;  // std dev = 1.744, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19190601978811184;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.244577582697093E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | then return 0.8548540881470436;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( teamplaysagainstteam(h, a) )
%   | | | | | then return 0.031778100716652984;  // std dev = 0.817, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.02320074434539908;  // std dev = 3.312, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.1301083178679942;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008846425527903413) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.2054740398503797) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5548540881470438) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.8548540881470437) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, c), 
     !. // Clause #4.

teamplayssport(a, b, 0.13491507098765937) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.00211313646071674) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025897902836692934) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19190601978811184) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.244577582697093E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.8548540881470436) :- 
     plays(b, c), 
     teamplaysagainstteam(a, c), 
     !. // Clause #10.

teamplayssport(a, b, 0.031778100716652984) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.02320074434539908) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.1301083178679942) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008846425527903413). // Flattened version of clause #1.

flattened_plays(B, UniqueVar45) ^
   teamplaysinleague(A, UniqueVar46) ^
   teamplaysinleague(UniqueVar45, UniqueVar46) ^
   teamplaysagainstteam(UniqueVar45, A) ^
   teamplaysagainstteam(A, UniqueVar45) ^
   ! => 
   teamplayssport(A, B, 0.2054740398503797). // Flattened version of clause #2.

flattened_plays(B, UniqueVar47) ^
   teamplaysinleague(A, UniqueVar48) ^
   teamplaysinleague(UniqueVar47, UniqueVar48) ^
   teamplaysagainstteam(UniqueVar47, A) ^
   ! => 
   teamplayssport(A, B, 0.5548540881470438). // Flattened version of clause #3.

flattened_plays(B, UniqueVar49) ^
   teamplaysinleague(A, UniqueVar50) ^
   teamplaysinleague(UniqueVar49, UniqueVar50) ^
   teamplaysagainstteam(A, UniqueVar49) ^
   ! => 
   teamplayssport(A, B, 0.8548540881470437). // Flattened version of clause #4.

flattened_plays(B, UniqueVar51) ^
   teamplaysinleague(A, UniqueVar52) ^
   teamplaysinleague(UniqueVar51, UniqueVar52) ^
   ! => 
   teamplayssport(A, B, 0.13491507098765937). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.00211313646071674). // Flattened version of clause #6.

flattened_plays(B, UniqueVar53) ^
   athleteplaysforteam(UniqueVar54, A) ^
   teamplaysagainstteam(A, UniqueVar53) ^
   athleteplayssport(UniqueVar54, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025897902836692934). // Flattened version of clause #7.

flattened_plays(B, UniqueVar55) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar55) ^
   ! => 
   teamplayssport(A, B, 0.19190601978811184). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.244577582697093E-4). // Flattened version of clause #9.

flattened_plays(B, UniqueVar56) ^
   teamplaysagainstteam(A, UniqueVar56) ^
   ! => 
   teamplayssport(A, B, 0.8548540881470436). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.031778100716652984). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.02320074434539908). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.1301083178679942). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(A, UniqueVar49)
%   plays(B, UniqueVar53)
%   teamplaysagainstteam(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar53)
%   teamplaysinleague(A, UniqueVar46)
%   athleteplaysforteam(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar56)
%   teamplaysinleague(UniqueVar45, UniqueVar46)
%   teamplaysagainstteam(UniqueVar47, A)
%   teamplaysinleague(UniqueVar47, UniqueVar48)
%   teamplaysinleague(A, UniqueVar52)
%   athleteplayssport(UniqueVar54, Underscore)
%   plays(B, UniqueVar45)
%   teamplaysinleague(UniqueVar51, UniqueVar52)
%   teamplaysagainstteam(A, UniqueVar45)
%   plays(B, UniqueVar55)
%   plays(Underscore, A)
%   teamplaysinleague(A, UniqueVar48)
%   teamplaysinleague(A, UniqueVar50)
%   athleteplaysforteam(UniqueVar54, A)
%   teamplaysagainstteam(A, UniqueVar55)
%   teamplaysinleague(UniqueVar49, UniqueVar50)
%   plays(B, UniqueVar51)
%   teamplaysagainstteam(UniqueVar45, A)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar56)
%   plays(B, UniqueVar49)
%   plays(B, Underscore)
%   plays(B, UniqueVar47)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #6 @ 10:51:16 6/4/18.  [Using 27,857,912 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008779735081631814;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.2057724607088827;  // std dev = 4.682, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5559482979615546;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.01678421646531938;  // std dev = 3.486, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.1547679661711404;  // std dev = 1.812, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.0021866148066772726;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.02593429562431525;  // std dev = 1.745, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19215165872606332;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.149282877872073E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, i) )
%   | | | | then if ( plays(b, i) )
%   | | | | | then return 0.03626899567633706;  // std dev = 0.579, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.023172743301095877;  // std dev = 1.038, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.02359113095333855;  // std dev = 0.498, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.1290141080534834;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008779735081631814) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.2057724607088827) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5559482979615546) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.01678421646531938) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.1547679661711404) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0021866148066772726) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.02593429562431525) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19215165872606332) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.149282877872073E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03626899567633706) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.023172743301095877) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.02359113095333855) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.1290141080534834) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008779735081631814). // Flattened version of clause #1.

flattened_plays(B, UniqueVar57) ^
   teamplaysinleague(A, UniqueVar58) ^
   teamplaysinleague(UniqueVar57, UniqueVar58) ^
   teamplaysagainstteam(UniqueVar57, A) ^
   teamplaysagainstteam(A, UniqueVar57) ^
   ! => 
   teamplayssport(A, B, 0.2057724607088827). // Flattened version of clause #2.

flattened_plays(B, UniqueVar59) ^
   teamplaysinleague(A, UniqueVar60) ^
   teamplaysinleague(UniqueVar59, UniqueVar60) ^
   teamplaysagainstteam(UniqueVar59, A) ^
   ! => 
   teamplayssport(A, B, 0.5559482979615546). // Flattened version of clause #3.

flattened_plays(B, UniqueVar61) ^
   teamplaysinleague(A, UniqueVar62) ^
   teamplaysinleague(UniqueVar61, UniqueVar62) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.01678421646531938). // Flattened version of clause #4.

flattened_plays(B, UniqueVar63) ^
   teamplaysinleague(A, UniqueVar64) ^
   teamplaysinleague(UniqueVar63, UniqueVar64) ^
   ! => 
   teamplayssport(A, B, 0.1547679661711404). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0021866148066772726). // Flattened version of clause #6.

flattened_plays(B, UniqueVar65) ^
   athleteplaysforteam(UniqueVar66, A) ^
   teamplaysagainstteam(A, UniqueVar65) ^
   athleteplayssport(UniqueVar66, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02593429562431525). // Flattened version of clause #7.

flattened_plays(B, UniqueVar67) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar67) ^
   ! => 
   teamplayssport(A, B, 0.19215165872606332). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.149282877872073E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, UniqueVar68) ^
   plays(B, UniqueVar68) ^
   ! => 
   teamplayssport(A, B, 0.03626899567633706). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.023172743301095877). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.02359113095333855). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.1290141080534834). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(A, UniqueVar67)
%   plays(B, UniqueVar61)
%   teamplaysagainstteam(Underscore, A)
%   athleteplayssport(UniqueVar66, Underscore)
%   teamplaysinleague(UniqueVar59, UniqueVar60)
%   athleteplaysforteam(UniqueVar66, A)
%   plays(B, UniqueVar65)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(A, UniqueVar60)
%   plays(B, UniqueVar67)
%   teamplaysinleague(UniqueVar63, UniqueVar64)
%   plays(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar57)
%   plays(B, UniqueVar63)
%   teamplaysinleague(A, UniqueVar58)
%   teamplaysagainstteam(UniqueVar59, A)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(A, UniqueVar65)
%   teamplaysinleague(A, UniqueVar62)
%   teamplaysinleague(UniqueVar57, UniqueVar58)
%   plays(B, UniqueVar57)
%   teamplaysinleague(UniqueVar61, UniqueVar62)
%   plays(B, Underscore)
%   plays(B, UniqueVar59)
%   teamplaysinleague(A, UniqueVar64)
%   plays(B, UniqueVar68)
%   teamplaysagainstteam(UniqueVar57, A)
%   teamplaysagainstteam(A, UniqueVar68)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #7 @ 10:51:31 6/4/18.  [Using 28,074,312 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysinleague(a, e) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.022157418077371257;  // std dev = 4.302, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | | | | else return 0.03946161564915724;  // std dev = 1.733, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.019284460867814636;  // std dev = 2.803, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.07300305188045585;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19045054820535615;  // std dev = 0.495, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8570274669241026;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(f, a) )
%   | | then if ( athleteplayssport(f, b) )
%   | | | then return 0.013316021467211855;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -5.103436453517072E-4;  // std dev = 0.311, 147.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=16 */
%   | | else if ( plays(g, a) )
%   | | | then return -0.009254086632627589;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else if ( teamplaysinleague(a, h) )
%   | | | | then if ( teamplaysinleague(c, h) )
%   | | | | | then return 0.13553051921763934;  // std dev = 2.783, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | | | else return 0.007927631765834508;  // std dev = 2.680, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | | else return 0.024650467883862298;  // std dev = 0.497, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   else return -0.12793493909093473;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, 0.022157418077371257) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #1.

teamplayssport(a, b, 0.03946161564915724) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.019284460867814636) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #3.

teamplayssport(a, b, 0.07300305188045585) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #4.

teamplayssport(a, b, 0.19045054820535615) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 0.8570274669241026) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, 0.013316021467211855) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     athleteplayssport(d, b), 
     !. // Clause #7.

teamplayssport(a, b, -5.103436453517072E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #8.

teamplayssport(a, b, -0.009254086632627589) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.13553051921763934) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.007927631765834508) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.024650467883862298) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12793493909093473) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar69) ^
   teamplaysagainstteam(UniqueVar69, A) ^
   athleteplaysforteam(Underscore, UniqueVar69) ^
   teamplaysinleague(UniqueVar69, UniqueVar70) ^
   teamplaysinleague(A, UniqueVar70) ^
   teamplaysagainstteam(A, UniqueVar69) ^
   ! => 
   teamplayssport(A, B, 0.022157418077371257). // Flattened version of clause #1.

flattened_plays(B, UniqueVar71) ^
   teamplaysagainstteam(UniqueVar71, A) ^
   athleteplaysforteam(Underscore, UniqueVar71) ^
   teamplaysinleague(UniqueVar71, UniqueVar72) ^
   teamplaysinleague(A, UniqueVar72) ^
   ! => 
   teamplayssport(A, B, 0.03946161564915724). // Flattened version of clause #2.

flattened_plays(B, UniqueVar73) ^
   teamplaysagainstteam(UniqueVar73, A) ^
   athleteplaysforteam(Underscore, UniqueVar73) ^
   teamplaysinleague(UniqueVar73, Underscore) ^
   teamplaysagainstteam(A, UniqueVar73) ^
   ! => 
   teamplayssport(A, B, 0.019284460867814636). // Flattened version of clause #3.

flattened_plays(B, UniqueVar74) ^
   teamplaysagainstteam(UniqueVar74, A) ^
   athleteplaysforteam(Underscore, UniqueVar74) ^
   teamplaysinleague(UniqueVar74, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.07300305188045585). // Flattened version of clause #4.

flattened_plays(B, UniqueVar75) ^
   teamplaysagainstteam(UniqueVar75, A) ^
   athleteplaysforteam(Underscore, UniqueVar75) ^
   ! => 
   teamplayssport(A, B, 0.19045054820535615). // Flattened version of clause #5.

flattened_plays(B, UniqueVar76) ^
   teamplaysagainstteam(UniqueVar76, A) ^
   ! => 
   teamplayssport(A, B, 0.8570274669241026). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(UniqueVar77, A) ^
   athleteplayssport(UniqueVar77, B) ^
   ! => 
   teamplayssport(A, B, 0.013316021467211855). // Flattened version of clause #7.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.103436453517072E-4). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009254086632627589). // Flattened version of clause #9.

flattened_plays(B, UniqueVar78) ^
   teamplaysinleague(A, UniqueVar79) ^
   teamplaysinleague(UniqueVar78, UniqueVar79) ^
   ! => 
   teamplayssport(A, B, 0.13553051921763934). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.007927631765834508). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.024650467883862298). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12793493909093473). // Flattened version of clause #13.


% The unique flattened literals:
%   athleteplaysforteam(Underscore, UniqueVar69)
%   teamplaysagainstteam(UniqueVar71, A)
%   plays(B, UniqueVar69)
%   teamplaysagainstteam(UniqueVar73, A)
%   teamplaysinleague(UniqueVar73, Underscore)
%   athleteplaysforteam(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar69)
%   athleteplaysforteam(Underscore, UniqueVar71)
%   athleteplaysforteam(Underscore, UniqueVar74)
%   teamplaysagainstteam(UniqueVar69, A)
%   athleteplaysforteam(UniqueVar77, A)
%   teamplaysinleague(A, UniqueVar70)
%   teamplaysagainstteam(UniqueVar76, A)
%   plays(B, UniqueVar78)
%   plays(Underscore, A)
%   plays(B, UniqueVar75)
%   athleteplayssport(UniqueVar77, B)
%   teamplaysinleague(UniqueVar71, UniqueVar72)
%   plays(B, UniqueVar76)
%   teamplaysinleague(UniqueVar78, UniqueVar79)
%   teamplaysinleague(A, UniqueVar72)
%   plays(B, UniqueVar71)
%   plays(B, UniqueVar74)
%   plays(B, UniqueVar73)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(UniqueVar75, A)
%   teamplaysagainstteam(UniqueVar74, A)
%   teamplaysinleague(UniqueVar74, Underscore)
%   teamplaysinleague(A, UniqueVar79)
%   teamplaysagainstteam(A, UniqueVar73)
%   athleteplaysforteam(Underscore, UniqueVar73)
%   plays(B, Underscore)
%   teamplaysinleague(UniqueVar69, UniqueVar70)
%   athleteplaysforteam(Underscore, UniqueVar75)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #8 @ 10:51:39 6/4/18.  [Using 27,942,776 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008880747852447623;  // std dev = 6.18e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20532045716906697;  // std dev = 4.675, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.554290951648899;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.016748876490451647;  // std dev = 3.480, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.1544431836084297;  // std dev = 1.811, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.002075320734806639;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.02587917324141095;  // std dev = 1.743, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.1917796013905691;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.293621125951088E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, i) )
%   | | | | then if ( plays(b, i) )
%   | | | | | then return 0.036198769137665204;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.02310399687332876;  // std dev = 1.038, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.023514669839163654;  // std dev = 0.498, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.1306714543661386;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008880747852447623) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20532045716906697) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.554290951648899) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.016748876490451647) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.1544431836084297) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.002075320734806639) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.02587917324141095) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.1917796013905691) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.293621125951088E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.036198769137665204) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.02310399687332876) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.023514669839163654) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.1306714543661386) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008880747852447623). // Flattened version of clause #1.

flattened_plays(B, UniqueVar80) ^
   teamplaysinleague(A, UniqueVar81) ^
   teamplaysinleague(UniqueVar80, UniqueVar81) ^
   teamplaysagainstteam(UniqueVar80, A) ^
   teamplaysagainstteam(A, UniqueVar80) ^
   ! => 
   teamplayssport(A, B, 0.20532045716906697). // Flattened version of clause #2.

flattened_plays(B, UniqueVar82) ^
   teamplaysinleague(A, UniqueVar83) ^
   teamplaysinleague(UniqueVar82, UniqueVar83) ^
   teamplaysagainstteam(UniqueVar82, A) ^
   ! => 
   teamplayssport(A, B, 0.554290951648899). // Flattened version of clause #3.

flattened_plays(B, UniqueVar84) ^
   teamplaysinleague(A, UniqueVar85) ^
   teamplaysinleague(UniqueVar84, UniqueVar85) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.016748876490451647). // Flattened version of clause #4.

flattened_plays(B, UniqueVar86) ^
   teamplaysinleague(A, UniqueVar87) ^
   teamplaysinleague(UniqueVar86, UniqueVar87) ^
   ! => 
   teamplayssport(A, B, 0.1544431836084297). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.002075320734806639). // Flattened version of clause #6.

flattened_plays(B, UniqueVar88) ^
   athleteplaysforteam(UniqueVar89, A) ^
   teamplaysagainstteam(A, UniqueVar88) ^
   athleteplayssport(UniqueVar89, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02587917324141095). // Flattened version of clause #7.

flattened_plays(B, UniqueVar90) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar90) ^
   ! => 
   teamplayssport(A, B, 0.1917796013905691). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.293621125951088E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, UniqueVar91) ^
   plays(B, UniqueVar91) ^
   ! => 
   teamplayssport(A, B, 0.036198769137665204). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02310399687332876). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023514669839163654). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.1306714543661386). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(A, UniqueVar80)
%   plays(B, UniqueVar84)
%   teamplaysagainstteam(Underscore, A)
%   plays(B, UniqueVar91)
%   plays(B, UniqueVar80)
%   teamplaysinleague(A, UniqueVar81)
%   athleteplayssport(UniqueVar89, Underscore)
%   plays(B, UniqueVar82)
%   teamplaysinleague(A, UniqueVar87)
%   teamplaysinleague(A, UniqueVar85)
%   plays(B, UniqueVar86)
%   teamplaysagainstteam(A, UniqueVar91)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(UniqueVar80, UniqueVar81)
%   teamplaysagainstteam(UniqueVar80, A)
%   teamplaysinleague(UniqueVar82, UniqueVar83)
%   plays(Underscore, A)
%   teamplaysinleague(UniqueVar84, UniqueVar85)
%   teamplaysinleague(UniqueVar86, UniqueVar87)
%   teamplaysagainstteam(UniqueVar82, A)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar88)
%   athleteplaysforteam(UniqueVar89, A)
%   teamplaysagainstteam(A, UniqueVar90)
%   teamplaysagainstteam(A, UniqueVar88)
%   plays(B, Underscore)
%   teamplaysinleague(A, UniqueVar83)
%   plays(B, UniqueVar90)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #9 @ 10:51:49 6/4/18.  [Using 28,074,880 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008813583669679045;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20562099786421922;  // std dev = 4.680, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5553929341977887;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.016772374316636234;  // std dev = 3.484, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.15465913407910553;  // std dev = 1.811, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else if ( athleteplaysforteam(g, a) )
%   | | | | then return -2.0754665962065453E-4;  // std dev = 0.305, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | | | else if ( teamplaysagainstteam(h, a) )
%   | | | | | then return -1.8019825123255062E-4;  // std dev = 2.033, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | | | else return 0.009062110763713044;  // std dev = 1.790, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( athleteplaysforteam(i, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(i, j) )
%   | | | | | then return 0.02591582454569776;  // std dev = 1.745, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19202698522807501;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.197649493887343E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.025339189958718682;  // std dev = 0.495, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   else return -0.12956947181724862;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008813583669679045) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20562099786421922) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5553929341977887) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.016772374316636234) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.15465913407910553) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, -2.0754665962065453E-4) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     athleteplaysforteam(e, a), 
     !. // Clause #6.

teamplayssport(a, b, -1.8019825123255062E-4) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #7.

teamplayssport(a, b, 0.009062110763713044) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #8.

teamplayssport(a, b, 0.02591582454569776) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #9.

teamplayssport(a, b, 0.19202698522807501) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #10.

teamplayssport(a, b, -5.197649493887343E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.025339189958718682) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12956947181724862) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008813583669679045). // Flattened version of clause #1.

flattened_plays(B, UniqueVar92) ^
   teamplaysinleague(A, UniqueVar93) ^
   teamplaysinleague(UniqueVar92, UniqueVar93) ^
   teamplaysagainstteam(UniqueVar92, A) ^
   teamplaysagainstteam(A, UniqueVar92) ^
   ! => 
   teamplayssport(A, B, 0.20562099786421922). // Flattened version of clause #2.

flattened_plays(B, UniqueVar94) ^
   teamplaysinleague(A, UniqueVar95) ^
   teamplaysinleague(UniqueVar94, UniqueVar95) ^
   teamplaysagainstteam(UniqueVar94, A) ^
   ! => 
   teamplayssport(A, B, 0.5553929341977887). // Flattened version of clause #3.

flattened_plays(B, UniqueVar96) ^
   teamplaysinleague(A, UniqueVar97) ^
   teamplaysinleague(UniqueVar96, UniqueVar97) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.016772374316636234). // Flattened version of clause #4.

flattened_plays(B, UniqueVar98) ^
   teamplaysinleague(A, UniqueVar99) ^
   teamplaysinleague(UniqueVar98, UniqueVar99) ^
   ! => 
   teamplayssport(A, B, 0.15465913407910553). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -2.0754665962065453E-4). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -1.8019825123255062E-4). // Flattened version of clause #7.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.009062110763713044). // Flattened version of clause #8.

flattened_plays(B, UniqueVar100) ^
   athleteplaysforteam(UniqueVar101, A) ^
   teamplaysagainstteam(A, UniqueVar100) ^
   athleteplayssport(UniqueVar101, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02591582454569776). // Flattened version of clause #9.

flattened_plays(B, UniqueVar102) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar102) ^
   ! => 
   teamplayssport(A, B, 0.19202698522807501). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.197649493887343E-4). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.025339189958718682). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12956947181724862). // Flattened version of clause #13.


% The unique flattened literals:
%   plays(B, UniqueVar102)
%   teamplaysagainstteam(Underscore, A)
%   teamplaysagainstteam(UniqueVar92, A)
%   plays(B, UniqueVar98)
%   athleteplaysforteam(UniqueVar101, A)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(UniqueVar92, UniqueVar93)
%   plays(B, UniqueVar92)
%   teamplaysagainstteam(UniqueVar94, A)
%   teamplaysinleague(A, UniqueVar97)
%   teamplaysagainstteam(A, UniqueVar100)
%   teamplaysagainstteam(A, UniqueVar102)
%   teamplaysinleague(A, UniqueVar99)
%   teamplaysagainstteam(A, UniqueVar92)
%   plays(Underscore, A)
%   teamplaysinleague(UniqueVar96, UniqueVar97)
%   plays(B, UniqueVar100)
%   plays(B, UniqueVar96)
%   teamplaysinleague(UniqueVar94, UniqueVar95)
%   teamplaysinleague(UniqueVar98, UniqueVar99)
%   athleteplayssport(UniqueVar101, Underscore)
%   teamplaysinleague(A, Underscore)
%   teamplaysinleague(A, UniqueVar93)
%   plays(B, UniqueVar94)
%   plays(B, Underscore)
%   teamplaysinleague(A, UniqueVar95)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #10 @ 10:52:03 6/4/18.  [Using 28,168,040 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysinleague(a, e) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.022140830970768664;  // std dev = 4.300, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | | | | else return 0.03941833529794479;  // std dev = 1.733, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.019266697118431535;  // std dev = 2.802, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.07294219187223877;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19032882818892197;  // std dev = 0.494, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8564797268501488;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(f, a) )
%   | | then if ( athleteplayssport(f, b) )
%   | | | then return 0.013307140910135594;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -5.137794346062293E-4;  // std dev = 0.311, 147.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=16 */
%   | | else if ( plays(g, a) )
%   | | | then return -0.009289539834634148;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else if ( teamplaysinleague(a, h) )
%   | | | | then if ( teamplaysinleague(c, h) )
%   | | | | | then return 0.13543183119487345;  // std dev = 2.783, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | | | else return 0.007885497913991922;  // std dev = 2.680, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | | else return 0.024624304728393415;  // std dev = 0.497, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   else return -0.12848267916488887;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, 0.022140830970768664) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #1.

teamplayssport(a, b, 0.03941833529794479) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.019266697118431535) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #3.

teamplayssport(a, b, 0.07294219187223877) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #4.

teamplayssport(a, b, 0.19032882818892197) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 0.8564797268501488) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, 0.013307140910135594) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     athleteplayssport(d, b), 
     !. // Clause #7.

teamplayssport(a, b, -5.137794346062293E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #8.

teamplayssport(a, b, -0.009289539834634148) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.13543183119487345) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.007885497913991922) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.024624304728393415) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12848267916488887) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar103) ^
   teamplaysagainstteam(UniqueVar103, A) ^
   athleteplaysforteam(Underscore, UniqueVar103) ^
   teamplaysinleague(UniqueVar103, UniqueVar104) ^
   teamplaysinleague(A, UniqueVar104) ^
   teamplaysagainstteam(A, UniqueVar103) ^
   ! => 
   teamplayssport(A, B, 0.022140830970768664). // Flattened version of clause #1.

flattened_plays(B, UniqueVar105) ^
   teamplaysagainstteam(UniqueVar105, A) ^
   athleteplaysforteam(Underscore, UniqueVar105) ^
   teamplaysinleague(UniqueVar105, UniqueVar106) ^
   teamplaysinleague(A, UniqueVar106) ^
   ! => 
   teamplayssport(A, B, 0.03941833529794479). // Flattened version of clause #2.

flattened_plays(B, UniqueVar107) ^
   teamplaysagainstteam(UniqueVar107, A) ^
   athleteplaysforteam(Underscore, UniqueVar107) ^
   teamplaysinleague(UniqueVar107, Underscore) ^
   teamplaysagainstteam(A, UniqueVar107) ^
   ! => 
   teamplayssport(A, B, 0.019266697118431535). // Flattened version of clause #3.

flattened_plays(B, UniqueVar108) ^
   teamplaysagainstteam(UniqueVar108, A) ^
   athleteplaysforteam(Underscore, UniqueVar108) ^
   teamplaysinleague(UniqueVar108, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.07294219187223877). // Flattened version of clause #4.

flattened_plays(B, UniqueVar109) ^
   teamplaysagainstteam(UniqueVar109, A) ^
   athleteplaysforteam(Underscore, UniqueVar109) ^
   ! => 
   teamplayssport(A, B, 0.19032882818892197). // Flattened version of clause #5.

flattened_plays(B, UniqueVar110) ^
   teamplaysagainstteam(UniqueVar110, A) ^
   ! => 
   teamplayssport(A, B, 0.8564797268501488). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(UniqueVar111, A) ^
   athleteplayssport(UniqueVar111, B) ^
   ! => 
   teamplayssport(A, B, 0.013307140910135594). // Flattened version of clause #7.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.137794346062293E-4). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009289539834634148). // Flattened version of clause #9.

flattened_plays(B, UniqueVar112) ^
   teamplaysinleague(A, UniqueVar113) ^
   teamplaysinleague(UniqueVar112, UniqueVar113) ^
   ! => 
   teamplayssport(A, B, 0.13543183119487345). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.007885497913991922). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.024624304728393415). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12848267916488887). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysinleague(UniqueVar112, UniqueVar113)
%   teamplaysagainstteam(UniqueVar103, A)
%   athleteplaysforteam(Underscore, UniqueVar109)
%   plays(B, UniqueVar109)
%   teamplaysagainstteam(UniqueVar108, A)
%   teamplaysinleague(UniqueVar108, Underscore)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(A, UniqueVar104)
%   teamplaysagainstteam(A, UniqueVar107)
%   athleteplaysforteam(Underscore, UniqueVar107)
%   athleteplaysforteam(Underscore, UniqueVar108)
%   plays(B, UniqueVar110)
%   plays(B, UniqueVar107)
%   plays(B, UniqueVar103)
%   teamplaysagainstteam(UniqueVar105, A)
%   teamplaysagainstteam(UniqueVar110, A)
%   plays(Underscore, A)
%   plays(B, UniqueVar108)
%   athleteplaysforteam(Underscore, UniqueVar103)
%   athleteplaysforteam(Underscore, UniqueVar105)
%   teamplaysagainstteam(UniqueVar109, A)
%   plays(B, UniqueVar105)
%   teamplaysagainstteam(A, UniqueVar103)
%   teamplaysagainstteam(UniqueVar107, A)
%   teamplaysinleague(UniqueVar107, Underscore)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar112)
%   teamplaysinleague(A, UniqueVar113)
%   athleteplaysforteam(UniqueVar111, A)
%   teamplaysinleague(UniqueVar103, UniqueVar104)
%   athleteplayssport(UniqueVar111, B)
%   teamplaysinleague(UniqueVar105, UniqueVar106)
%   plays(B, Underscore)
%   teamplaysinleague(A, UniqueVar106)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree Combined @ 10:52:15 6/4/18.  [Using 28,055,240 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysinleague(a, e) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.022057761035190568;  // std dev = 4.291, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | | | | else return 0.03920158284839727;  // std dev = 1.732, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.019177734434810103;  // std dev = 2.797, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.07263739869263222;  // std dev = 0.540, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18971924182970892;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8537365882336901;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(f, a) )
%   | | then return -2.427771416625705E-4;  // std dev = 0.355, 155.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=23 */
%   | | else if ( plays(g, a) )
%   | | | then return -0.009467093116064368;  // std dev = 4.56e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else if ( teamplaysinleague(a, h) )
%   | | | | then if ( teamplaysinleague(c, h) )
%   | | | | | then return 0.13493759142841463;  // std dev = 2.780, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | | | else return 0.007674487251187396;  // std dev = 2.683, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | | else if ( teamplaysagainstteam(i, a) )
%   | | | | | then return 0.0317270361510759;  // std dev = 0.818, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.02314887675303902;  // std dev = 3.312, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.13122581778134723;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, 0.022057761035190568) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #1.

teamplayssport(a, b, 0.03920158284839727) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.019177734434810103) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #3.

teamplayssport(a, b, 0.07263739869263222) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #4.

teamplayssport(a, b, 0.18971924182970892) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 0.8537365882336901) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, -2.427771416625705E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #7.

teamplayssport(a, b, -0.009467093116064368) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #8.

teamplayssport(a, b, 0.13493759142841463) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #9.

teamplayssport(a, b, 0.007674487251187396) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.0317270361510759) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.02314887675303902) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.13122581778134723) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar114) ^
   teamplaysagainstteam(UniqueVar114, A) ^
   athleteplaysforteam(Underscore, UniqueVar114) ^
   teamplaysinleague(UniqueVar114, UniqueVar115) ^
   teamplaysinleague(A, UniqueVar115) ^
   teamplaysagainstteam(A, UniqueVar114) ^
   ! => 
   teamplayssport(A, B, 0.022057761035190568). // Flattened version of clause #1.

flattened_plays(B, UniqueVar116) ^
   teamplaysagainstteam(UniqueVar116, A) ^
   athleteplaysforteam(Underscore, UniqueVar116) ^
   teamplaysinleague(UniqueVar116, UniqueVar117) ^
   teamplaysinleague(A, UniqueVar117) ^
   ! => 
   teamplayssport(A, B, 0.03920158284839727). // Flattened version of clause #2.

flattened_plays(B, UniqueVar118) ^
   teamplaysagainstteam(UniqueVar118, A) ^
   athleteplaysforteam(Underscore, UniqueVar118) ^
   teamplaysinleague(UniqueVar118, Underscore) ^
   teamplaysagainstteam(A, UniqueVar118) ^
   ! => 
   teamplayssport(A, B, 0.019177734434810103). // Flattened version of clause #3.

flattened_plays(B, UniqueVar119) ^
   teamplaysagainstteam(UniqueVar119, A) ^
   athleteplaysforteam(Underscore, UniqueVar119) ^
   teamplaysinleague(UniqueVar119, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.07263739869263222). // Flattened version of clause #4.

flattened_plays(B, UniqueVar120) ^
   teamplaysagainstteam(UniqueVar120, A) ^
   athleteplaysforteam(Underscore, UniqueVar120) ^
   ! => 
   teamplayssport(A, B, 0.18971924182970892). // Flattened version of clause #5.

flattened_plays(B, UniqueVar121) ^
   teamplaysagainstteam(UniqueVar121, A) ^
   ! => 
   teamplayssport(A, B, 0.8537365882336901). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -2.427771416625705E-4). // Flattened version of clause #7.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009467093116064368). // Flattened version of clause #8.

flattened_plays(B, UniqueVar122) ^
   teamplaysinleague(A, UniqueVar123) ^
   teamplaysinleague(UniqueVar122, UniqueVar123) ^
   ! => 
   teamplayssport(A, B, 0.13493759142841463). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.007674487251187396). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.0317270361510759). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.02314887675303902). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.13122581778134723). // Flattened version of clause #13.


% The unique flattened literals:
%   plays(B, UniqueVar121)
%   teamplaysinleague(UniqueVar114, UniqueVar115)
%   teamplaysagainstteam(Underscore, A)
%   teamplaysagainstteam(UniqueVar119, A)
%   teamplaysagainstteam(UniqueVar114, A)
%   teamplaysinleague(UniqueVar118, Underscore)
%   teamplaysinleague(UniqueVar119, Underscore)
%   teamplaysinleague(A, UniqueVar115)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(A, UniqueVar117)
%   teamplaysinleague(UniqueVar122, UniqueVar123)
%   teamplaysagainstteam(UniqueVar116, A)
%   teamplaysagainstteam(A, UniqueVar118)
%   athleteplaysforteam(Underscore, UniqueVar119)
%   plays(B, UniqueVar118)
%   plays(B, UniqueVar119)
%   athleteplaysforteam(Underscore, UniqueVar114)
%   teamplaysagainstteam(A, UniqueVar114)
%   plays(B, UniqueVar122)
%   plays(Underscore, A)
%   teamplaysinleague(UniqueVar116, UniqueVar117)
%   athleteplaysforteam(Underscore, UniqueVar118)
%   plays(B, UniqueVar120)
%   plays(B, UniqueVar114)
%   plays(B, UniqueVar116)
%   athleteplaysforteam(Underscore, UniqueVar120)
%   teamplaysinleague(A, Underscore)
%   teamplaysinleague(A, UniqueVar123)
%   athleteplaysforteam(Underscore, UniqueVar116)
%   teamplaysagainstteam(UniqueVar118, A)
%   plays(B, Underscore)
%   teamplaysagainstteam(UniqueVar120, A)
%   teamplaysagainstteam(UniqueVar121, A)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #12 @ 10:52:24 6/4/18.  [Using 27,973,344 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.009083722951614477;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20441220108840746;  // std dev = 4.660, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.550960679353146;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.016677864331836465;  // std dev = 3.470, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.15379056540638014;  // std dev = 1.809, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.0018516863854844494;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.025768410304745117;  // std dev = 1.737, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.191031989242543;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.58365445521028E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | then return 0.850960679353146;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( teamplaysagainstteam(i, a) )
%   | | | | | then return 0.031600189983686806;  // std dev = 0.820, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.023020035839027123;  // std dev = 3.312, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.13400172666189117;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.009083722951614477) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20441220108840746) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.550960679353146) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.016677864331836465) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.15379056540638014) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0018516863854844494) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025768410304745117) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.191031989242543) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.58365445521028E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.850960679353146) :- 
     plays(b, c), 
     teamplaysagainstteam(a, c), 
     !. // Clause #10.

teamplayssport(a, b, 0.031600189983686806) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.023020035839027123) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.13400172666189117) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009083722951614477). // Flattened version of clause #1.

flattened_plays(B, UniqueVar124) ^
   teamplaysinleague(A, UniqueVar125) ^
   teamplaysinleague(UniqueVar124, UniqueVar125) ^
   teamplaysagainstteam(UniqueVar124, A) ^
   teamplaysagainstteam(A, UniqueVar124) ^
   ! => 
   teamplayssport(A, B, 0.20441220108840746). // Flattened version of clause #2.

flattened_plays(B, UniqueVar126) ^
   teamplaysinleague(A, UniqueVar127) ^
   teamplaysinleague(UniqueVar126, UniqueVar127) ^
   teamplaysagainstteam(UniqueVar126, A) ^
   ! => 
   teamplayssport(A, B, 0.550960679353146). // Flattened version of clause #3.

flattened_plays(B, UniqueVar128) ^
   teamplaysinleague(A, UniqueVar129) ^
   teamplaysinleague(UniqueVar128, UniqueVar129) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.016677864331836465). // Flattened version of clause #4.

flattened_plays(B, UniqueVar130) ^
   teamplaysinleague(A, UniqueVar131) ^
   teamplaysinleague(UniqueVar130, UniqueVar131) ^
   ! => 
   teamplayssport(A, B, 0.15379056540638014). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0018516863854844494). // Flattened version of clause #6.

flattened_plays(B, UniqueVar132) ^
   athleteplaysforteam(UniqueVar133, A) ^
   teamplaysagainstteam(A, UniqueVar132) ^
   athleteplayssport(UniqueVar133, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025768410304745117). // Flattened version of clause #7.

flattened_plays(B, UniqueVar134) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar134) ^
   ! => 
   teamplayssport(A, B, 0.191031989242543). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.58365445521028E-4). // Flattened version of clause #9.

flattened_plays(B, UniqueVar135) ^
   teamplaysagainstteam(A, UniqueVar135) ^
   ! => 
   teamplayssport(A, B, 0.850960679353146). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.031600189983686806). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023020035839027123). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.13400172666189117). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysinleague(UniqueVar130, UniqueVar131)
%   teamplaysagainstteam(Underscore, A)
%   teamplaysinleague(UniqueVar126, UniqueVar127)
%   teamplaysinleague(UniqueVar124, UniqueVar125)
%   plays(B, UniqueVar134)
%   teamplaysinleague(UniqueVar128, UniqueVar129)
%   athleteplaysforteam(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar134)
%   teamplaysagainstteam(A, UniqueVar135)
%   teamplaysagainstteam(A, UniqueVar132)
%   athleteplaysforteam(UniqueVar133, A)
%   plays(B, UniqueVar132)
%   plays(Underscore, A)
%   plays(B, UniqueVar124)
%   teamplaysagainstteam(UniqueVar124, A)
%   teamplaysinleague(A, UniqueVar129)
%   plays(B, UniqueVar130)
%   plays(B, UniqueVar135)
%   plays(B, UniqueVar128)
%   teamplaysinleague(A, UniqueVar125)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(A, UniqueVar124)
%   plays(B, UniqueVar126)
%   teamplaysinleague(A, UniqueVar131)
%   teamplaysagainstteam(UniqueVar126, A)
%   plays(B, Underscore)
%   athleteplayssport(UniqueVar133, Underscore)
%   teamplaysinleague(A, UniqueVar127)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #13 @ 10:52:32 6/4/18.  [Using 28,082,112 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.009013730382494776;  // std dev = 2.63e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20472539801140413;  // std dev = 4.665, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5521090680708001;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.8521090680707999;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13443169911639827;  // std dev = 3.103, 75.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return 0.001928802951588976;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(f, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(f, g) )
%   | | | | | then return 0.025806605051452013;  // std dev = 1.739, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19128979079140404;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.483641311093005E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | then return 0.8521090680708;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( teamplaysagainstteam(h, a) )
%   | | | | | then return 0.03165266602442728;  // std dev = 0.819, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | else return 0.023073337103006127;  // std dev = 3.312, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.13285333794423798;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.009013730382494776) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20472539801140413) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5521090680708001) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.8521090680707999) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, c), 
     !. // Clause #4.

teamplayssport(a, b, 0.13443169911639827) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.001928802951588976) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025806605051452013) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19128979079140404) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.483641311093005E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.8521090680708) :- 
     plays(b, c), 
     teamplaysagainstteam(a, c), 
     !. // Clause #10.

teamplayssport(a, b, 0.03165266602442728) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.023073337103006127) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.13285333794423798) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009013730382494776). // Flattened version of clause #1.

flattened_plays(B, UniqueVar136) ^
   teamplaysinleague(A, UniqueVar137) ^
   teamplaysinleague(UniqueVar136, UniqueVar137) ^
   teamplaysagainstteam(UniqueVar136, A) ^
   teamplaysagainstteam(A, UniqueVar136) ^
   ! => 
   teamplayssport(A, B, 0.20472539801140413). // Flattened version of clause #2.

flattened_plays(B, UniqueVar138) ^
   teamplaysinleague(A, UniqueVar139) ^
   teamplaysinleague(UniqueVar138, UniqueVar139) ^
   teamplaysagainstteam(UniqueVar138, A) ^
   ! => 
   teamplayssport(A, B, 0.5521090680708001). // Flattened version of clause #3.

flattened_plays(B, UniqueVar140) ^
   teamplaysinleague(A, UniqueVar141) ^
   teamplaysinleague(UniqueVar140, UniqueVar141) ^
   teamplaysagainstteam(A, UniqueVar140) ^
   ! => 
   teamplayssport(A, B, 0.8521090680707999). // Flattened version of clause #4.

flattened_plays(B, UniqueVar142) ^
   teamplaysinleague(A, UniqueVar143) ^
   teamplaysinleague(UniqueVar142, UniqueVar143) ^
   ! => 
   teamplayssport(A, B, 0.13443169911639827). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.001928802951588976). // Flattened version of clause #6.

flattened_plays(B, UniqueVar144) ^
   athleteplaysforteam(UniqueVar145, A) ^
   teamplaysagainstteam(A, UniqueVar144) ^
   athleteplayssport(UniqueVar145, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025806605051452013). // Flattened version of clause #7.

flattened_plays(B, UniqueVar146) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar146) ^
   ! => 
   teamplayssport(A, B, 0.19128979079140404). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.483641311093005E-4). // Flattened version of clause #9.

flattened_plays(B, UniqueVar147) ^
   teamplaysagainstteam(A, UniqueVar147) ^
   ! => 
   teamplayssport(A, B, 0.8521090680708). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.03165266602442728). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023073337103006127). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.13285333794423798). // Flattened version of clause #13.


% The unique flattened literals:
%   athleteplayssport(UniqueVar145, Underscore)
%   teamplaysagainstteam(UniqueVar136, A)
%   plays(B, UniqueVar140)
%   teamplaysagainstteam(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar140)
%   teamplaysagainstteam(A, UniqueVar146)
%   teamplaysinleague(UniqueVar136, UniqueVar137)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(UniqueVar140, UniqueVar141)
%   teamplaysinleague(A, UniqueVar143)
%   plays(B, UniqueVar147)
%   athleteplaysforteam(UniqueVar145, A)
%   plays(B, UniqueVar146)
%   teamplaysinleague(UniqueVar138, UniqueVar139)
%   teamplaysagainstteam(UniqueVar138, A)
%   teamplaysinleague(A, UniqueVar137)
%   teamplaysagainstteam(A, UniqueVar147)
%   plays(Underscore, A)
%   plays(B, UniqueVar136)
%   plays(B, UniqueVar138)
%   teamplaysinleague(UniqueVar142, UniqueVar143)
%   teamplaysinleague(A, UniqueVar139)
%   plays(B, UniqueVar142)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar144)
%   teamplaysagainstteam(A, UniqueVar136)
%   teamplaysagainstteam(A, UniqueVar144)
%   plays(B, Underscore)
%   teamplaysinleague(A, UniqueVar141)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #14 @ 10:52:44 6/4/18.  [Using 28,214,104 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysinleague(a, e) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.022042764431744827;  // std dev = 4.289, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | | | | else return 0.03916245256005481;  // std dev = 1.732, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.019161674014413033;  // std dev = 2.796, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.07258237442403585;  // std dev = 0.541, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18960919329251616;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8532413698163227;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(f, a) )
%   | | then return -2.459453600120283E-4;  // std dev = 0.355, 155.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=23 */
%   | | else if ( teamplaysinleague(a, g) )
%   | | | then if ( teamplaysinleague(c, g) )
%   | | | | then if ( teamplaysagainstteam(a, h) )
%   | | | | | then return 0.017499283321918014;  // std dev = 2.538, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | | | else return 0.15423750186602286;  // std dev = 1.810, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | | else return 0.005356545740255411;  // std dev = 0.345, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | | else if ( plays(i, a) )
%   | | | | then return -0.009361147192786003;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | | else return 0.024469622530451953;  // std dev = 0.497, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   else return -0.131721036198715;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, 0.022042764431744827) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #1.

teamplayssport(a, b, 0.03916245256005481) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.019161674014413033) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysagainstteam(a, c), 
     !. // Clause #3.

teamplayssport(a, b, 0.07258237442403585) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #4.

teamplayssport(a, b, 0.18960919329251616) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 0.8532413698163227) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, -2.459453600120283E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #7.

teamplayssport(a, b, 0.017499283321918014) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, e), 
     !. // Clause #8.

teamplayssport(a, b, 0.15423750186602286) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #9.

teamplayssport(a, b, 0.005356545740255411) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #10.

teamplayssport(a, b, -0.009361147192786003) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.024469622530451953) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.131721036198715) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar148) ^
   teamplaysagainstteam(UniqueVar148, A) ^
   athleteplaysforteam(Underscore, UniqueVar148) ^
   teamplaysinleague(UniqueVar148, UniqueVar149) ^
   teamplaysinleague(A, UniqueVar149) ^
   teamplaysagainstteam(A, UniqueVar148) ^
   ! => 
   teamplayssport(A, B, 0.022042764431744827). // Flattened version of clause #1.

flattened_plays(B, UniqueVar150) ^
   teamplaysagainstteam(UniqueVar150, A) ^
   athleteplaysforteam(Underscore, UniqueVar150) ^
   teamplaysinleague(UniqueVar150, UniqueVar151) ^
   teamplaysinleague(A, UniqueVar151) ^
   ! => 
   teamplayssport(A, B, 0.03916245256005481). // Flattened version of clause #2.

flattened_plays(B, UniqueVar152) ^
   teamplaysagainstteam(UniqueVar152, A) ^
   athleteplaysforteam(Underscore, UniqueVar152) ^
   teamplaysinleague(UniqueVar152, Underscore) ^
   teamplaysagainstteam(A, UniqueVar152) ^
   ! => 
   teamplayssport(A, B, 0.019161674014413033). // Flattened version of clause #3.

flattened_plays(B, UniqueVar153) ^
   teamplaysagainstteam(UniqueVar153, A) ^
   athleteplaysforteam(Underscore, UniqueVar153) ^
   teamplaysinleague(UniqueVar153, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.07258237442403585). // Flattened version of clause #4.

flattened_plays(B, UniqueVar154) ^
   teamplaysagainstteam(UniqueVar154, A) ^
   athleteplaysforteam(Underscore, UniqueVar154) ^
   ! => 
   teamplayssport(A, B, 0.18960919329251616). // Flattened version of clause #5.

flattened_plays(B, UniqueVar155) ^
   teamplaysagainstteam(UniqueVar155, A) ^
   ! => 
   teamplayssport(A, B, 0.8532413698163227). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -2.459453600120283E-4). // Flattened version of clause #7.

flattened_plays(B, UniqueVar156) ^
   teamplaysinleague(A, UniqueVar157) ^
   teamplaysinleague(UniqueVar156, UniqueVar157) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.017499283321918014). // Flattened version of clause #8.

flattened_plays(B, UniqueVar158) ^
   teamplaysinleague(A, UniqueVar159) ^
   teamplaysinleague(UniqueVar158, UniqueVar159) ^
   ! => 
   teamplayssport(A, B, 0.15423750186602286). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.005356545740255411). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.009361147192786003). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.024469622530451953). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.131721036198715). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(UniqueVar153, A)
%   teamplaysinleague(A, UniqueVar149)
%   plays(B, UniqueVar152)
%   teamplaysagainstteam(UniqueVar150, A)
%   athleteplaysforteam(Underscore, UniqueVar152)
%   teamplaysagainstteam(A, UniqueVar152)
%   teamplaysinleague(A, UniqueVar151)
%   teamplaysinleague(UniqueVar150, UniqueVar151)
%   athleteplaysforteam(Underscore, A)
%   athleteplaysforteam(Underscore, UniqueVar154)
%   teamplaysinleague(UniqueVar156, UniqueVar157)
%   plays(B, UniqueVar154)
%   teamplaysinleague(UniqueVar153, Underscore)
%   plays(B, UniqueVar156)
%   teamplaysinleague(A, UniqueVar159)
%   athleteplaysforteam(Underscore, UniqueVar148)
%   teamplaysagainstteam(A, UniqueVar148)
%   plays(B, UniqueVar155)
%   plays(Underscore, A)
%   teamplaysagainstteam(UniqueVar152, A)
%   teamplaysinleague(A, UniqueVar157)
%   plays(B, UniqueVar148)
%   teamplaysinleague(UniqueVar158, UniqueVar159)
%   teamplaysinleague(UniqueVar148, UniqueVar149)
%   teamplaysinleague(UniqueVar152, Underscore)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(UniqueVar154, A)
%   athleteplaysforteam(Underscore, UniqueVar150)
%   teamplaysagainstteam(UniqueVar148, A)
%   plays(B, UniqueVar158)
%   teamplaysagainstteam(UniqueVar155, A)
%   plays(B, Underscore)
%   athleteplaysforteam(Underscore, UniqueVar153)
%   plays(B, UniqueVar150)
%   plays(B, UniqueVar153)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #15 @ 10:52:53 6/4/18.  [Using 28,209,696 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.00911426202285664;  // std dev = 2.63e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20427554739410067;  // std dev = 4.658, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5504596158073551;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.016667180039133023;  // std dev = 3.468, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.15369237427925117;  // std dev = 1.808, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.0018180389806836735;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.025751745220073577;  // std dev = 1.736, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19091950558940624;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.627292066627659E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(i, a) )
%   | | | | then if ( plays(b, i) )
%   | | | | | then return 0.03603642439861675;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.0315772937024553;  // std dev = 0.820, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | else return 0.022996779497412235;  // std dev = 0.499, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.1345027902076819;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.00911426202285664) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20427554739410067) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5504596158073551) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.016667180039133023) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.15369237427925117) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0018180389806836735) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025751745220073577) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19091950558940624) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.627292066627659E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03603642439861675) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.0315772937024553) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.022996779497412235) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.1345027902076819) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.00911426202285664). // Flattened version of clause #1.

flattened_plays(B, UniqueVar160) ^
   teamplaysinleague(A, UniqueVar161) ^
   teamplaysinleague(UniqueVar160, UniqueVar161) ^
   teamplaysagainstteam(UniqueVar160, A) ^
   teamplaysagainstteam(A, UniqueVar160) ^
   ! => 
   teamplayssport(A, B, 0.20427554739410067). // Flattened version of clause #2.

flattened_plays(B, UniqueVar162) ^
   teamplaysinleague(A, UniqueVar163) ^
   teamplaysinleague(UniqueVar162, UniqueVar163) ^
   teamplaysagainstteam(UniqueVar162, A) ^
   ! => 
   teamplayssport(A, B, 0.5504596158073551). // Flattened version of clause #3.

flattened_plays(B, UniqueVar164) ^
   teamplaysinleague(A, UniqueVar165) ^
   teamplaysinleague(UniqueVar164, UniqueVar165) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.016667180039133023). // Flattened version of clause #4.

flattened_plays(B, UniqueVar166) ^
   teamplaysinleague(A, UniqueVar167) ^
   teamplaysinleague(UniqueVar166, UniqueVar167) ^
   ! => 
   teamplayssport(A, B, 0.15369237427925117). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0018180389806836735). // Flattened version of clause #6.

flattened_plays(B, UniqueVar168) ^
   athleteplaysforteam(UniqueVar169, A) ^
   teamplaysagainstteam(A, UniqueVar168) ^
   athleteplayssport(UniqueVar169, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025751745220073577). // Flattened version of clause #7.

flattened_plays(B, UniqueVar170) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar170) ^
   ! => 
   teamplayssport(A, B, 0.19091950558940624). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.627292066627659E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(UniqueVar171, A) ^
   plays(B, UniqueVar171) ^
   ! => 
   teamplayssport(A, B, 0.03603642439861675). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.0315772937024553). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.022996779497412235). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.1345027902076819). // Flattened version of clause #13.


% The unique flattened literals:
%   plays(B, UniqueVar166)
%   plays(B, UniqueVar168)
%   teamplaysagainstteam(Underscore, A)
%   plays(B, UniqueVar164)
%   teamplaysinleague(A, UniqueVar161)
%   teamplaysinleague(A, UniqueVar167)
%   teamplaysinleague(UniqueVar162, UniqueVar163)
%   athleteplaysforteam(Underscore, A)
%   athleteplaysforteam(UniqueVar169, A)
%   teamplaysagainstteam(UniqueVar162, A)
%   plays(B, UniqueVar171)
%   teamplaysagainstteam(A, UniqueVar168)
%   plays(Underscore, A)
%   plays(B, UniqueVar162)
%   teamplaysinleague(UniqueVar166, UniqueVar167)
%   teamplaysagainstteam(UniqueVar160, A)
%   teamplaysinleague(UniqueVar164, UniqueVar165)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(A, UniqueVar160)
%   teamplaysagainstteam(UniqueVar171, A)
%   teamplaysinleague(A, UniqueVar165)
%   plays(B, UniqueVar160)
%   plays(B, Underscore)
%   teamplaysinleague(UniqueVar160, UniqueVar161)
%   athleteplayssport(UniqueVar169, Underscore)
%   teamplaysinleague(A, UniqueVar163)
%   plays(B, UniqueVar170)
%   teamplaysagainstteam(A, UniqueVar170)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #16 @ 10:53:02 6/4/18.  [Using 28,263,920 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.00904383996456696;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20459066615948976;  // std dev = 4.663, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5516150512804484;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.016691817654258232;  // std dev = 3.472, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.15391879967455463;  // std dev = 1.809, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.0018956287503065711;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.025790174337803954;  // std dev = 1.738, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19117888906295782;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.526665220758991E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, i) )
%   | | | | then if ( plays(b, i) )
%   | | | | | then return 0.03608538352883256;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.02299300100602757;  // std dev = 1.040, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.023391218076529424;  // std dev = 0.498, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.13334735473458906;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.00904383996456696) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20459066615948976) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5516150512804484) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.016691817654258232) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.15391879967455463) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0018956287503065711) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025790174337803954) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.19117888906295782) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.526665220758991E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03608538352883256) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.02299300100602757) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.023391218076529424) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.13334735473458906) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.00904383996456696). // Flattened version of clause #1.

flattened_plays(B, UniqueVar172) ^
   teamplaysinleague(A, UniqueVar173) ^
   teamplaysinleague(UniqueVar172, UniqueVar173) ^
   teamplaysagainstteam(UniqueVar172, A) ^
   teamplaysagainstteam(A, UniqueVar172) ^
   ! => 
   teamplayssport(A, B, 0.20459066615948976). // Flattened version of clause #2.

flattened_plays(B, UniqueVar174) ^
   teamplaysinleague(A, UniqueVar175) ^
   teamplaysinleague(UniqueVar174, UniqueVar175) ^
   teamplaysagainstteam(UniqueVar174, A) ^
   ! => 
   teamplayssport(A, B, 0.5516150512804484). // Flattened version of clause #3.

flattened_plays(B, UniqueVar176) ^
   teamplaysinleague(A, UniqueVar177) ^
   teamplaysinleague(UniqueVar176, UniqueVar177) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.016691817654258232). // Flattened version of clause #4.

flattened_plays(B, UniqueVar178) ^
   teamplaysinleague(A, UniqueVar179) ^
   teamplaysinleague(UniqueVar178, UniqueVar179) ^
   ! => 
   teamplayssport(A, B, 0.15391879967455463). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0018956287503065711). // Flattened version of clause #6.

flattened_plays(B, UniqueVar180) ^
   athleteplaysforteam(UniqueVar181, A) ^
   teamplaysagainstteam(A, UniqueVar180) ^
   athleteplayssport(UniqueVar181, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025790174337803954). // Flattened version of clause #7.

flattened_plays(B, UniqueVar182) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar182) ^
   ! => 
   teamplayssport(A, B, 0.19117888906295782). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.526665220758991E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, UniqueVar183) ^
   plays(B, UniqueVar183) ^
   ! => 
   teamplayssport(A, B, 0.03608538352883256). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02299300100602757). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023391218076529424). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.13334735473458906). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(Underscore, A)
%   plays(B, UniqueVar183)
%   plays(B, UniqueVar180)
%   teamplaysagainstteam(A, UniqueVar183)
%   athleteplaysforteam(Underscore, A)
%   teamplaysinleague(A, UniqueVar173)
%   teamplaysagainstteam(A, UniqueVar180)
%   teamplaysinleague(UniqueVar172, UniqueVar173)
%   teamplaysagainstteam(UniqueVar174, A)
%   teamplaysinleague(UniqueVar178, UniqueVar179)
%   teamplaysinleague(A, UniqueVar175)
%   teamplaysagainstteam(A, UniqueVar172)
%   teamplaysinleague(A, UniqueVar177)
%   plays(Underscore, A)
%   plays(B, UniqueVar174)
%   teamplaysinleague(UniqueVar176, UniqueVar177)
%   plays(B, UniqueVar182)
%   plays(B, UniqueVar172)
%   plays(B, UniqueVar176)
%   plays(B, UniqueVar178)
%   teamplaysagainstteam(UniqueVar172, A)
%   athleteplaysforteam(UniqueVar181, A)
%   teamplaysagainstteam(A, UniqueVar182)
%   teamplaysinleague(A, Underscore)
%   teamplaysinleague(A, UniqueVar179)
%   athleteplayssport(UniqueVar181, Underscore)
%   teamplaysinleague(UniqueVar174, UniqueVar175)
%   plays(B, Underscore)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #17 @ 10:53:11 6/4/18.  [Using 28,330,224 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.00897440675015032;  // std dev = 4.17e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20490136012861468;  // std dev = 4.668, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5527542625005732;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.8527542625005731;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | else return 0.13454531170580894;  // std dev = 3.104, 75.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=59 */
%   | | | else return 0.0019721290293612426;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(f, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(f, g) )
%   | | | | | then return 0.02582806384623382;  // std dev = 1.740, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.1914346303572715;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.427451344667363E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(a, h) )
%   | | | | then if ( plays(b, h) )
%   | | | | | then return 0.03613365519070225;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.023040255283095525;  // std dev = 1.039, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | else return 0.02344377520264491;  // std dev = 0.498, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.13220814351446444;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.00897440675015032) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20490136012861468) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5527542625005732) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.8527542625005731) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, c), 
     !. // Clause #4.

teamplayssport(a, b, 0.13454531170580894) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.0019721290293612426) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.02582806384623382) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.1914346303572715) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.427451344667363E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03613365519070225) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.023040255283095525) :- 
     plays(b, c), 
     teamplaysagainstteam(a, d), 
     !. // Clause #11.

teamplayssport(a, b, 0.02344377520264491) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.13220814351446444) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.00897440675015032). // Flattened version of clause #1.

flattened_plays(B, UniqueVar184) ^
   teamplaysinleague(A, UniqueVar185) ^
   teamplaysinleague(UniqueVar184, UniqueVar185) ^
   teamplaysagainstteam(UniqueVar184, A) ^
   teamplaysagainstteam(A, UniqueVar184) ^
   ! => 
   teamplayssport(A, B, 0.20490136012861468). // Flattened version of clause #2.

flattened_plays(B, UniqueVar186) ^
   teamplaysinleague(A, UniqueVar187) ^
   teamplaysinleague(UniqueVar186, UniqueVar187) ^
   teamplaysagainstteam(UniqueVar186, A) ^
   ! => 
   teamplayssport(A, B, 0.5527542625005732). // Flattened version of clause #3.

flattened_plays(B, UniqueVar188) ^
   teamplaysinleague(A, UniqueVar189) ^
   teamplaysinleague(UniqueVar188, UniqueVar189) ^
   teamplaysagainstteam(A, UniqueVar188) ^
   ! => 
   teamplayssport(A, B, 0.8527542625005731). // Flattened version of clause #4.

flattened_plays(B, UniqueVar190) ^
   teamplaysinleague(A, UniqueVar191) ^
   teamplaysinleague(UniqueVar190, UniqueVar191) ^
   ! => 
   teamplayssport(A, B, 0.13454531170580894). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.0019721290293612426). // Flattened version of clause #6.

flattened_plays(B, UniqueVar192) ^
   athleteplaysforteam(UniqueVar193, A) ^
   teamplaysagainstteam(A, UniqueVar192) ^
   athleteplayssport(UniqueVar193, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02582806384623382). // Flattened version of clause #7.

flattened_plays(B, UniqueVar194) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar194) ^
   ! => 
   teamplayssport(A, B, 0.1914346303572715). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.427451344667363E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, UniqueVar195) ^
   plays(B, UniqueVar195) ^
   ! => 
   teamplayssport(A, B, 0.03613365519070225). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.023040255283095525). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.02344377520264491). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.13220814351446444). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysinleague(A, UniqueVar187)
%   athleteplaysforteam(UniqueVar193, A)
%   teamplaysinleague(A, UniqueVar189)
%   teamplaysinleague(UniqueVar188, UniqueVar189)
%   teamplaysagainstteam(UniqueVar184, A)
%   plays(B, UniqueVar192)
%   plays(B, UniqueVar186)
%   athleteplaysforteam(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar192)
%   athleteplayssport(UniqueVar193, Underscore)
%   plays(Underscore, A)
%   teamplaysagainstteam(A, UniqueVar195)
%   plays(B, UniqueVar188)
%   teamplaysagainstteam(A, UniqueVar194)
%   plays(B, UniqueVar194)
%   teamplaysagainstteam(A, UniqueVar188)
%   plays(B, UniqueVar190)
%   plays(B, UniqueVar195)
%   teamplaysinleague(UniqueVar190, UniqueVar191)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(UniqueVar186, A)
%   teamplaysinleague(UniqueVar186, UniqueVar187)
%   teamplaysinleague(A, UniqueVar191)
%   plays(B, Underscore)
%   teamplaysinleague(UniqueVar184, UniqueVar185)
%   teamplaysagainstteam(A, UniqueVar184)
%   teamplaysinleague(A, UniqueVar185)
%   plays(B, UniqueVar184)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #18 @ 10:53:21 6/4/18.  [Using 28,505,944 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008905943140749958;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20520771538991073;  // std dev = 4.673, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5538775651253244;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.016740061754966236;  // std dev = 3.479, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.15436217414559675;  // std dev = 1.810, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else if ( teamplaysagainstteam(c, a) )
%   | | | | then return 0.19875325213876024;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | | else return -0.0012343345088059745;  // std dev = 0.281, 150.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=13 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.02586542424395282;  // std dev = 1.742, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.19168680033425653;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( athleteplayssport(g, i) )
%   | | | | | then return -0.0012842919456728425;  // std dev = 0.374, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | | | else return 0.0030099672739020093;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.02526734419920586;  // std dev = 0.495, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   else return -0.13108484088971306;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008905943140749958) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20520771538991073) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5538775651253244) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.016740061754966236) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.15436217414559675) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.19875325213876024) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #6.

teamplayssport(a, b, -0.0012343345088059745) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #7.

teamplayssport(a, b, 0.02586542424395282) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #8.

teamplayssport(a, b, 0.19168680033425653) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #9.

teamplayssport(a, b, -0.0012842919456728425) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     athleteplayssport(d, e), 
     !. // Clause #10.

teamplayssport(a, b, 0.0030099672739020093) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.02526734419920586) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.13108484088971306) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008905943140749958). // Flattened version of clause #1.

flattened_plays(B, UniqueVar196) ^
   teamplaysinleague(A, UniqueVar197) ^
   teamplaysinleague(UniqueVar196, UniqueVar197) ^
   teamplaysagainstteam(UniqueVar196, A) ^
   teamplaysagainstteam(A, UniqueVar196) ^
   ! => 
   teamplayssport(A, B, 0.20520771538991073). // Flattened version of clause #2.

flattened_plays(B, UniqueVar198) ^
   teamplaysinleague(A, UniqueVar199) ^
   teamplaysinleague(UniqueVar198, UniqueVar199) ^
   teamplaysagainstteam(UniqueVar198, A) ^
   ! => 
   teamplayssport(A, B, 0.5538775651253244). // Flattened version of clause #3.

flattened_plays(B, UniqueVar200) ^
   teamplaysinleague(A, UniqueVar201) ^
   teamplaysinleague(UniqueVar200, UniqueVar201) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.016740061754966236). // Flattened version of clause #4.

flattened_plays(B, UniqueVar202) ^
   teamplaysinleague(A, UniqueVar203) ^
   teamplaysinleague(UniqueVar202, UniqueVar203) ^
   ! => 
   teamplayssport(A, B, 0.15436217414559675). // Flattened version of clause #5.

flattened_plays(B, UniqueVar204) ^
   teamplaysinleague(A, Underscore) ^
   teamplaysagainstteam(UniqueVar204, A) ^
   ! => 
   teamplayssport(A, B, 0.19875325213876024). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, -0.0012343345088059745). // Flattened version of clause #7.

flattened_plays(B, UniqueVar205) ^
   athleteplaysforteam(UniqueVar206, A) ^
   teamplaysagainstteam(A, UniqueVar205) ^
   athleteplayssport(UniqueVar206, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02586542424395282). // Flattened version of clause #8.

flattened_plays(B, UniqueVar207) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar207) ^
   ! => 
   teamplayssport(A, B, 0.19168680033425653). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(UniqueVar208, A) ^
   athleteplayssport(UniqueVar208, Underscore) ^
   ! => 
   teamplayssport(A, B, -0.0012842919456728425). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.0030099672739020093). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.02526734419920586). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.13108484088971306). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(Underscore, A)
%   teamplaysagainstteam(UniqueVar198, A)
%   teamplaysinleague(UniqueVar200, UniqueVar201)
%   teamplaysinleague(UniqueVar202, UniqueVar203)
%   athleteplayssport(UniqueVar208, Underscore)
%   plays(B, UniqueVar198)
%   athleteplayssport(UniqueVar206, Underscore)
%   teamplaysinleague(UniqueVar196, UniqueVar197)
%   athleteplaysforteam(Underscore, A)
%   plays(B, UniqueVar202)
%   teamplaysinleague(A, UniqueVar203)
%   athleteplaysforteam(UniqueVar206, A)
%   teamplaysinleague(A, UniqueVar197)
%   teamplaysagainstteam(A, UniqueVar207)
%   plays(Underscore, A)
%   teamplaysinleague(A, UniqueVar199)
%   plays(B, UniqueVar207)
%   teamplaysinleague(UniqueVar198, UniqueVar199)
%   plays(B, UniqueVar204)
%   teamplaysinleague(A, Underscore)
%   teamplaysagainstteam(A, UniqueVar205)
%   athleteplaysforteam(UniqueVar208, A)
%   plays(B, Underscore)
%   teamplaysinleague(A, UniqueVar201)
%   teamplaysagainstteam(A, UniqueVar196)
%   plays(B, UniqueVar200)
%   plays(B, UniqueVar196)
%   teamplaysagainstteam(UniqueVar196, A)
%   teamplaysagainstteam(UniqueVar204, A)
%   plays(B, UniqueVar205)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #19 @ 10:53:36 6/4/18.  [Using 28,463,264 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( teamplaysagainstteam(c, a) )
%   | then if ( athleteplaysforteam(d, c) )
%   | | then if ( plays(e, a) )
%   | | | then return -0.006417728450362368;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else if ( teamplaysinleague(c, f) )
%   | | | | then if ( teamplaysinleague(a, f) )
%   | | | | | then return 0.022629115545031685;  // std dev = 4.392, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | | | | else return 0.02133675893012603;  // std dev = 2.798, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | | else return 0.18999672605283813;  // std dev = 0.494, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8549852672377716;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(g, a) )
%   | | then if ( athleteplayssport(g, b) )
%   | | | then return 0.013282911107502956;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -5.231536771013248E-4;  // std dev = 0.311, 147.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=16 */
%   | | else if ( teamplaysinleague(a, h) )
%   | | | then if ( teamplaysinleague(c, h) )
%   | | | | then if ( teamplaysagainstteam(a, i) )
%   | | | | | then return 0.017540971485499577;  // std dev = 2.542, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | | | else return 0.15457924545293508;  // std dev = 1.811, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | | else return 0.005492876483300271;  // std dev = 0.345, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | | else if ( plays(j, a) )
%   | | | | then return -0.0092499109375084;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | | else return 0.024552920907782348;  // std dev = 0.497, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   else return -0.12997713877726638;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.006417728450362368) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     plays(e, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.022629115545031685) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     teamplaysinleague(a, e), 
     !. // Clause #2.

teamplayssport(a, b, 0.02133675893012603) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     teamplaysinleague(c, e), 
     !. // Clause #3.

teamplayssport(a, b, 0.18999672605283813) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     athleteplaysforteam(d, c), 
     !. // Clause #4.

teamplayssport(a, b, 0.8549852672377716) :- 
     plays(b, c), 
     teamplaysagainstteam(c, a), 
     !. // Clause #5.

teamplayssport(a, b, 0.013282911107502956) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     athleteplayssport(d, b), 
     !. // Clause #6.

teamplayssport(a, b, -5.231536771013248E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #7.

teamplayssport(a, b, 0.017540971485499577) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(a, e), 
     !. // Clause #8.

teamplayssport(a, b, 0.15457924545293508) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #9.

teamplayssport(a, b, 0.005492876483300271) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #10.

teamplayssport(a, b, -0.0092499109375084) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.024552920907782348) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12997713877726638) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, UniqueVar209) ^
   teamplaysagainstteam(UniqueVar209, A) ^
   athleteplaysforteam(Underscore, UniqueVar209) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.006417728450362368). // Flattened version of clause #1.

flattened_plays(B, UniqueVar210) ^
   teamplaysagainstteam(UniqueVar210, A) ^
   athleteplaysforteam(Underscore, UniqueVar210) ^
   teamplaysinleague(UniqueVar210, UniqueVar211) ^
   teamplaysinleague(A, UniqueVar211) ^
   ! => 
   teamplayssport(A, B, 0.022629115545031685). // Flattened version of clause #2.

flattened_plays(B, UniqueVar212) ^
   teamplaysagainstteam(UniqueVar212, A) ^
   athleteplaysforteam(Underscore, UniqueVar212) ^
   teamplaysinleague(UniqueVar212, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.02133675893012603). // Flattened version of clause #3.

flattened_plays(B, UniqueVar213) ^
   teamplaysagainstteam(UniqueVar213, A) ^
   athleteplaysforteam(Underscore, UniqueVar213) ^
   ! => 
   teamplayssport(A, B, 0.18999672605283813). // Flattened version of clause #4.

flattened_plays(B, UniqueVar214) ^
   teamplaysagainstteam(UniqueVar214, A) ^
   ! => 
   teamplayssport(A, B, 0.8549852672377716). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(UniqueVar215, A) ^
   athleteplayssport(UniqueVar215, B) ^
   ! => 
   teamplayssport(A, B, 0.013282911107502956). // Flattened version of clause #6.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.231536771013248E-4). // Flattened version of clause #7.

flattened_plays(B, UniqueVar216) ^
   teamplaysinleague(A, UniqueVar217) ^
   teamplaysinleague(UniqueVar216, UniqueVar217) ^
   teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.017540971485499577). // Flattened version of clause #8.

flattened_plays(B, UniqueVar218) ^
   teamplaysinleague(A, UniqueVar219) ^
   teamplaysinleague(UniqueVar218, UniqueVar219) ^
   ! => 
   teamplayssport(A, B, 0.15457924545293508). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.005492876483300271). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.0092499109375084). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.024552920907782348). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12997713877726638). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysagainstteam(UniqueVar214, A)
%   teamplaysinleague(UniqueVar218, UniqueVar219)
%   plays(B, UniqueVar218)
%   athleteplaysforteam(Underscore, UniqueVar213)
%   teamplaysagainstteam(UniqueVar213, A)
%   plays(B, UniqueVar216)
%   plays(B, UniqueVar212)
%   teamplaysinleague(A, UniqueVar219)
%   athleteplaysforteam(Underscore, A)
%   plays(B, UniqueVar210)
%   athleteplaysforteam(Underscore, UniqueVar212)
%   athleteplaysforteam(Underscore, UniqueVar210)
%   teamplaysagainstteam(UniqueVar212, A)
%   plays(B, UniqueVar213)
%   plays(Underscore, A)
%   teamplaysinleague(UniqueVar212, Underscore)
%   teamplaysinleague(UniqueVar216, UniqueVar217)
%   teamplaysinleague(UniqueVar210, UniqueVar211)
%   athleteplaysforteam(UniqueVar215, A)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar214)
%   teamplaysinleague(A, UniqueVar217)
%   plays(B, UniqueVar209)
%   teamplaysagainstteam(UniqueVar210, A)
%   teamplaysinleague(A, UniqueVar211)
%   plays(B, Underscore)
%   athleteplayssport(UniqueVar215, B)
%   teamplaysagainstteam(UniqueVar209, A)
%   athleteplaysforteam(Underscore, UniqueVar209)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)

%%%%%  WILL-Produced Tree #20 @ 10:53:45 6/4/18.  [Using 28,394,000 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(b, c) )
%   then if ( plays(d, a) )
%   | then return -0.008790043732981402;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( teamplaysinleague(a, e) )
%   | | then if ( teamplaysinleague(c, e) )
%   | | | then if ( teamplaysagainstteam(c, a) )
%   | | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | | then return 0.20572633241378582;  // std dev = 4.682, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | | else return 0.5557791608795329;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | else if ( teamplaysagainstteam(f, a) )
%   | | | | | then return 0.01678060991659616;  // std dev = 3.485, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | | | | else return 0.15473482115218512;  // std dev = 1.812, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.002175256918215003;  // std dev = 0.328, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */
%   | | else if ( athleteplaysforteam(g, a) )
%   | | | then if ( teamplaysagainstteam(a, c) )
%   | | | | then if ( athleteplayssport(g, h) )
%   | | | | | then return 0.025928670222474175;  // std dev = 1.745, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.192113689177038;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -5.164013022029505E-4;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else if ( teamplaysagainstteam(i, a) )
%   | | | | then if ( plays(b, i) )
%   | | | | | then return 0.03626182885082767;  // std dev = 0.579, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | else return 0.031820372252111116;  // std dev = 0.816, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | else return 0.023243680630958302;  // std dev = 0.499, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   else return -0.12918324513550436;  // std dev = 0.122, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */


% Clauses:

teamplayssport(a, b, -0.008790043732981402) :- 
     plays(b, c), 
     plays(d, a), 
     !. // Clause #1.

teamplayssport(a, b, 0.20572633241378582) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #2.

teamplayssport(a, b, 0.5557791608795329) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(c, a), 
     !. // Clause #3.

teamplayssport(a, b, 0.01678060991659616) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     teamplaysagainstteam(e, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.15473482115218512) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     teamplaysinleague(c, d), 
     !. // Clause #5.

teamplayssport(a, b, 0.002175256918215003) :- 
     plays(b, c), 
     teamplaysinleague(a, d), 
     !. // Clause #6.

teamplayssport(a, b, 0.025928670222474175) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     athleteplayssport(d, e), 
     !. // Clause #7.

teamplayssport(a, b, 0.192113689177038) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     teamplaysagainstteam(a, c), 
     !. // Clause #8.

teamplayssport(a, b, -5.164013022029505E-4) :- 
     plays(b, c), 
     athleteplaysforteam(d, a), 
     !. // Clause #9.

teamplayssport(a, b, 0.03626182885082767) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, 0.031820372252111116) :- 
     plays(b, c), 
     teamplaysagainstteam(d, a), 
     !. // Clause #11.

teamplayssport(a, b, 0.023243680630958302) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -0.12918324513550436) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(B, Underscore) ^
   plays(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -0.008790043732981402). // Flattened version of clause #1.

flattened_plays(B, UniqueVar220) ^
   teamplaysinleague(A, UniqueVar221) ^
   teamplaysinleague(UniqueVar220, UniqueVar221) ^
   teamplaysagainstteam(UniqueVar220, A) ^
   teamplaysagainstteam(A, UniqueVar220) ^
   ! => 
   teamplayssport(A, B, 0.20572633241378582). // Flattened version of clause #2.

flattened_plays(B, UniqueVar222) ^
   teamplaysinleague(A, UniqueVar223) ^
   teamplaysinleague(UniqueVar222, UniqueVar223) ^
   teamplaysagainstteam(UniqueVar222, A) ^
   ! => 
   teamplayssport(A, B, 0.5557791608795329). // Flattened version of clause #3.

flattened_plays(B, UniqueVar224) ^
   teamplaysinleague(A, UniqueVar225) ^
   teamplaysinleague(UniqueVar224, UniqueVar225) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.01678060991659616). // Flattened version of clause #4.

flattened_plays(B, UniqueVar226) ^
   teamplaysinleague(A, UniqueVar227) ^
   teamplaysinleague(UniqueVar226, UniqueVar227) ^
   ! => 
   teamplayssport(A, B, 0.15473482115218512). // Flattened version of clause #5.

flattened_plays(B, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.002175256918215003). // Flattened version of clause #6.

flattened_plays(B, UniqueVar228) ^
   athleteplaysforteam(UniqueVar229, A) ^
   teamplaysagainstteam(A, UniqueVar228) ^
   athleteplayssport(UniqueVar229, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.025928670222474175). // Flattened version of clause #7.

flattened_plays(B, UniqueVar230) ^
   athleteplaysforteam(Underscore, A) ^
   teamplaysagainstteam(A, UniqueVar230) ^
   ! => 
   teamplayssport(A, B, 0.192113689177038). // Flattened version of clause #8.

flattened_plays(B, Underscore) ^
   athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, -5.164013022029505E-4). // Flattened version of clause #9.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(UniqueVar231, A) ^
   plays(B, UniqueVar231) ^
   ! => 
   teamplayssport(A, B, 0.03626182885082767). // Flattened version of clause #10.

flattened_plays(B, Underscore) ^
   teamplaysagainstteam(Underscore, A) ^
   ! => 
   teamplayssport(A, B, 0.031820372252111116). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.023243680630958302). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -0.12918324513550436). // Flattened version of clause #13.


% The unique flattened literals:
%   teamplaysinleague(A, UniqueVar227)
%   teamplaysagainstteam(Underscore, A)
%   athleteplaysforteam(UniqueVar229, A)
%   teamplaysagainstteam(A, UniqueVar230)
%   teamplaysinleague(A, UniqueVar221)
%   athleteplaysforteam(Underscore, A)
%   plays(B, UniqueVar220)
%   teamplaysagainstteam(A, UniqueVar228)
%   teamplaysinleague(UniqueVar220, UniqueVar221)
%   teamplaysagainstteam(UniqueVar222, A)
%   plays(B, UniqueVar228)
%   teamplaysagainstteam(A, UniqueVar220)
%   plays(B, UniqueVar224)
%   teamplaysinleague(UniqueVar222, UniqueVar223)
%   plays(B, UniqueVar222)
%   teamplaysinleague(A, UniqueVar223)
%   plays(Underscore, A)
%   teamplaysagainstteam(UniqueVar220, A)
%   teamplaysinleague(A, UniqueVar225)
%   teamplaysinleague(UniqueVar224, UniqueVar225)
%   plays(B, UniqueVar226)
%   teamplaysinleague(UniqueVar226, UniqueVar227)
%   athleteplayssport(UniqueVar229, Underscore)
%   teamplaysinleague(A, Underscore)
%   plays(B, UniqueVar230)
%   plays(B, Underscore)
%   teamplaysagainstteam(UniqueVar231, A)
%   plays(B, UniqueVar231)
%   plays(A, Underscore)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for teamplayssport.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
teamplayssport(a, b, total) :- // A general accessor. 
   teamplayssport(a, b, 1000000, total), !.
teamplayssport(a, b, total) :- waitHere("This should not fail", teamplayssport(a, b, total)).

teamplayssport(a, b, treesToUse, total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(logPrior),
   getScore_teamplayssport_tree1(a, b, treesToUse, total1),
   getScore_teamplayssport_tree2(a, b, treesToUse, total2),
   getScore_teamplayssport_tree3(a, b, treesToUse, total3),
   getScore_teamplayssport_tree4(a, b, treesToUse, total4),
   getScore_teamplayssport_tree5(a, b, treesToUse, total5),
   getScore_teamplayssport_tree6(a, b, treesToUse, total6),
   getScore_teamplayssport_tree7(a, b, treesToUse, total7),
   getScore_teamplayssport_tree8(a, b, treesToUse, total8),
   getScore_teamplayssport_tree9(a, b, treesToUse, total9),
   getScore_teamplayssport_tree10(a, b, treesToUse, total10),
   getScore_teamplayssport_tree11(a, b, treesToUse, total11),
   getScore_teamplayssport_tree12(a, b, treesToUse, total12),
   getScore_teamplayssport_tree13(a, b, treesToUse, total13),
   getScore_teamplayssport_tree14(a, b, treesToUse, total14),
   getScore_teamplayssport_tree15(a, b, treesToUse, total15),
   getScore_teamplayssport_tree16(a, b, treesToUse, total16),
   getScore_teamplayssport_tree17(a, b, treesToUse, total17),
   getScore_teamplayssport_tree18(a, b, treesToUse, total18),
   getScore_teamplayssport_tree19(a, b, treesToUse, total19),
   getScore_teamplayssport_tree20(a, b, treesToUse, total20),
   total is logPrior + total1 + total2 + total3 + total4 + total5 + total6 + total7 + total8 + total9 + total10 + total11 + total12 + total13 + total14 + total15 + total16 + total17 + total18 + total19 + total20,
   !.
teamplayssport(a, b, treesToUse, total) :- waitHere("This should not fail", teamplayssport(a, b, treesToUse, total)).

getScore_teamplayssport_tree1(a, b, treesToUse, 0.0) :- 1 > treesToUse, !.
getScore_teamplayssport_tree1(a, b, treesToUse, total1) :- teamplayssport_tree1(a, b, total), stepLength_tree1(stepLen), total1 is total * stepLen.

getScore_teamplayssport_tree2(a, b, treesToUse, 0.0) :- 2 > treesToUse, !.
getScore_teamplayssport_tree2(a, b, treesToUse, total2) :- teamplayssport_tree2(a, b, total), stepLength_tree2(stepLen), total2 is total * stepLen.

getScore_teamplayssport_tree3(a, b, treesToUse, 0.0) :- 3 > treesToUse, !.
getScore_teamplayssport_tree3(a, b, treesToUse, total3) :- teamplayssport_tree3(a, b, total), stepLength_tree3(stepLen), total3 is total * stepLen.

getScore_teamplayssport_tree4(a, b, treesToUse, 0.0) :- 4 > treesToUse, !.
getScore_teamplayssport_tree4(a, b, treesToUse, total4) :- teamplayssport_tree4(a, b, total), stepLength_tree4(stepLen), total4 is total * stepLen.

getScore_teamplayssport_tree5(a, b, treesToUse, 0.0) :- 5 > treesToUse, !.
getScore_teamplayssport_tree5(a, b, treesToUse, total5) :- teamplayssport_tree5(a, b, total), stepLength_tree5(stepLen), total5 is total * stepLen.

getScore_teamplayssport_tree6(a, b, treesToUse, 0.0) :- 6 > treesToUse, !.
getScore_teamplayssport_tree6(a, b, treesToUse, total6) :- teamplayssport_tree6(a, b, total), stepLength_tree6(stepLen), total6 is total * stepLen.

getScore_teamplayssport_tree7(a, b, treesToUse, 0.0) :- 7 > treesToUse, !.
getScore_teamplayssport_tree7(a, b, treesToUse, total7) :- teamplayssport_tree7(a, b, total), stepLength_tree7(stepLen), total7 is total * stepLen.

getScore_teamplayssport_tree8(a, b, treesToUse, 0.0) :- 8 > treesToUse, !.
getScore_teamplayssport_tree8(a, b, treesToUse, total8) :- teamplayssport_tree8(a, b, total), stepLength_tree8(stepLen), total8 is total * stepLen.

getScore_teamplayssport_tree9(a, b, treesToUse, 0.0) :- 9 > treesToUse, !.
getScore_teamplayssport_tree9(a, b, treesToUse, total9) :- teamplayssport_tree9(a, b, total), stepLength_tree9(stepLen), total9 is total * stepLen.

getScore_teamplayssport_tree10(a, b, treesToUse, 0.0) :- 10 > treesToUse, !.
getScore_teamplayssport_tree10(a, b, treesToUse, total10) :- teamplayssport_tree10(a, b, total), stepLength_tree10(stepLen), total10 is total * stepLen.

getScore_teamplayssport_tree11(a, b, treesToUse, 0.0) :- 11 > treesToUse, !.
getScore_teamplayssport_tree11(a, b, treesToUse, total11) :- teamplayssport_tree11(a, b, total), stepLength_tree11(stepLen), total11 is total * stepLen.

getScore_teamplayssport_tree12(a, b, treesToUse, 0.0) :- 12 > treesToUse, !.
getScore_teamplayssport_tree12(a, b, treesToUse, total12) :- teamplayssport_tree12(a, b, total), stepLength_tree12(stepLen), total12 is total * stepLen.

getScore_teamplayssport_tree13(a, b, treesToUse, 0.0) :- 13 > treesToUse, !.
getScore_teamplayssport_tree13(a, b, treesToUse, total13) :- teamplayssport_tree13(a, b, total), stepLength_tree13(stepLen), total13 is total * stepLen.

getScore_teamplayssport_tree14(a, b, treesToUse, 0.0) :- 14 > treesToUse, !.
getScore_teamplayssport_tree14(a, b, treesToUse, total14) :- teamplayssport_tree14(a, b, total), stepLength_tree14(stepLen), total14 is total * stepLen.

getScore_teamplayssport_tree15(a, b, treesToUse, 0.0) :- 15 > treesToUse, !.
getScore_teamplayssport_tree15(a, b, treesToUse, total15) :- teamplayssport_tree15(a, b, total), stepLength_tree15(stepLen), total15 is total * stepLen.

getScore_teamplayssport_tree16(a, b, treesToUse, 0.0) :- 16 > treesToUse, !.
getScore_teamplayssport_tree16(a, b, treesToUse, total16) :- teamplayssport_tree16(a, b, total), stepLength_tree16(stepLen), total16 is total * stepLen.

getScore_teamplayssport_tree17(a, b, treesToUse, 0.0) :- 17 > treesToUse, !.
getScore_teamplayssport_tree17(a, b, treesToUse, total17) :- teamplayssport_tree17(a, b, total), stepLength_tree17(stepLen), total17 is total * stepLen.

getScore_teamplayssport_tree18(a, b, treesToUse, 0.0) :- 18 > treesToUse, !.
getScore_teamplayssport_tree18(a, b, treesToUse, total18) :- teamplayssport_tree18(a, b, total), stepLength_tree18(stepLen), total18 is total * stepLen.

getScore_teamplayssport_tree19(a, b, treesToUse, 0.0) :- 19 > treesToUse, !.
getScore_teamplayssport_tree19(a, b, treesToUse, total19) :- teamplayssport_tree19(a, b, total), stepLength_tree19(stepLen), total19 is total * stepLen.

getScore_teamplayssport_tree20(a, b, treesToUse, 0.0) :- 20 > treesToUse, !.
getScore_teamplayssport_tree20(a, b, treesToUse, total20) :- teamplayssport_tree20(a, b, total), stepLength_tree20(stepLen), total20 is total * stepLen.

flattenedLiteralsInThisSetOfTrees(teamplayssport, 511, [
   teamplaysagainstteam(UniqueVar136, A),
   plays(B, UniqueVar61),
   teamplaysinleague(A, UniqueVar151),
   plays(B, UniqueVar218),
   athleteplaysforteam(Underscore, UniqueVar213),
   teamplaysagainstteam(UniqueVar213, A),
   teamplaysagainstteam(UniqueVar25, A),
   teamplaysinleague(UniqueVar128, UniqueVar129),
   teamplaysinleague(A, UniqueVar173),
   teamplaysinleague(UniqueVar5, Underscore),
   plays(B, UniqueVar40),
   teamplaysinleague(A, UniqueVar104),
   teamplaysinleague(A, UniqueVar117),
   plays(B, UniqueVar202),
   athleteplaysforteam(UniqueVar206, A),
   teamplaysinleague(A, UniqueVar137),
   teamplaysinleague(UniqueVar63, UniqueVar64),
   teamplaysagainstteam(A, UniqueVar172),
   athleteplaysforteam(UniqueVar32, A),
   teamplaysagainstteam(A, UniqueVar194),
   teamplaysinleague(A, UniqueVar199),
   teamplaysinleague(UniqueVar94, UniqueVar95),
   plays(B, UniqueVar135),
   teamplaysagainstteam(A, UniqueVar182),
   teamplaysinleague(A, UniqueVar125),
   plays(B, UniqueVar41),
   teamplaysagainstteam(A, UniqueVar90),
   teamplaysagainstteam(UniqueVar171, A),
   teamplaysagainstteam(A, UniqueVar88),
   athleteplaysforteam(Underscore, UniqueVar73),
   teamplaysagainstteam(UniqueVar57, A),
   athleteplaysforteam(Underscore, UniqueVar75),
   teamplaysagainstteam(UniqueVar196, A),
   plays(B, UniqueVar53),
   athleteplaysforteam(Underscore, UniqueVar152),
   plays(B, UniqueVar37),
   athleteplaysforteam(Underscore, UniqueVar109),
   plays(B, UniqueVar212),
   athleteplaysforteam(UniqueVar20, A),
   athleteplaysforteam(Underscore, UniqueVar108),
   athleteplaysforteam(UniqueVar169, A),
   teamplaysinleague(UniqueVar220, UniqueVar221),
   plays(B, UniqueVar146),
   plays(B, UniqueVar224),
   plays(B, UniqueVar13),
   teamplaysagainstteam(A, UniqueVar100),
   teamplaysagainstteam(UniqueVar116, A),
   plays(B, UniqueVar1),
   teamplaysagainstteam(A, UniqueVar23),
   teamplaysinleague(UniqueVar51, UniqueVar52),
   teamplaysinleague(A, UniqueVar223),
   teamplaysagainstteam(UniqueVar152, A),
   plays(B, UniqueVar176),
   teamplaysinleague(A, UniqueVar225),
   plays(B, UniqueVar22),
   teamplaysinleague(UniqueVar86, UniqueVar87),
   teamplaysinleague(UniqueVar210, UniqueVar211),
   teamplaysagainstteam(UniqueVar59, A),
   teamplaysinleague(A, Underscore),
   teamplaysagainstteam(A, UniqueVar124),
   teamplaysinleague(A, UniqueVar113),
   teamplaysinleague(UniqueVar186, UniqueVar187),
   teamplaysagainstteam(UniqueVar148, A),
   plays(B, UniqueVar49),
   teamplaysagainstteam(A, UniqueVar144),
   teamplaysinleague(UniqueVar174, UniqueVar175),
   teamplaysagainstteam(UniqueVar153, A),
   teamplaysinleague(A, UniqueVar149),
   plays(B, UniqueVar183),
   plays(B, UniqueVar80),
   plays(B, UniqueVar82),
   plays(B, UniqueVar15),
   teamplaysagainstteam(A, UniqueVar31),
   athleteplaysforteam(UniqueVar101, A),
   plays(B, UniqueVar31),
   plays(B, UniqueVar29),
   athleteplaysforteam(UniqueVar133, A),
   plays(B, UniqueVar119),
   teamplaysagainstteam(A, UniqueVar21),
   plays(Underscore, A),
   teamplaysagainstteam(UniqueVar41, A),
   plays(B, UniqueVar195),
   athleteplayssport(UniqueVar229, Underscore),
   plays(B, UniqueVar112),
   teamplaysagainstteam(UniqueVar154, A),
   athleteplaysforteam(Underscore, UniqueVar150),
   teamplaysinleague(UniqueVar57, UniqueVar58),
   athleteplayssport(UniqueVar181, Underscore),
   plays(B, UniqueVar209),
   teamplaysinleague(A, UniqueVar201),
   plays(B, UniqueVar170),
   plays(B, UniqueVar184),
   teamplaysagainstteam(A, UniqueVar68),
   plays(B, UniqueVar205),
   plays(B, UniqueVar91),
   teamplaysinleague(UniqueVar114, UniqueVar115),
   athleteplaysforteam(UniqueVar193, A),
   teamplaysagainstteam(UniqueVar92, A),
   teamplaysinleague(UniqueVar124, UniqueVar125),
   plays(B, UniqueVar198),
   teamplaysinleague(A, UniqueVar18),
   teamplaysagainstteam(UniqueVar103, A),
   teamplaysinleague(A, UniqueVar161),
   plays(B, UniqueVar65),
   teamplaysinleague(UniqueVar150, UniqueVar151),
   plays(B, UniqueVar19),
   teamplaysinleague(UniqueVar140, UniqueVar141),
   teamplaysagainstteam(A, UniqueVar228),
   teamplaysagainstteam(UniqueVar1, A),
   athleteplaysforteam(UniqueVar145, A),
   teamplaysagainstteam(UniqueVar13, A),
   teamplaysinleague(UniqueVar122, UniqueVar123),
   plays(B, UniqueVar154),
   teamplaysinleague(UniqueVar47, UniqueVar48),
   teamplaysinleague(A, UniqueVar175),
   teamplaysinleague(UniqueVar25, UniqueVar26),
   plays(B, UniqueVar67),
   plays(B, UniqueVar156),
   teamplaysinleague(UniqueVar176, UniqueVar177),
   teamplaysagainstteam(A, UniqueVar57),
   plays(B, UniqueVar194),
   teamplaysinleague(UniqueVar78, UniqueVar79),
   plays(B, UniqueVar138),
   teamplaysagainstteam(UniqueVar172, A),
   plays(B, UniqueVar114),
   plays(B, UniqueVar128),
   teamplaysagainstteam(A, UniqueVar103),
   teamplaysagainstteam(UniqueVar39, A),
   teamplaysagainstteam(UniqueVar74, A),
   teamplaysinleague(A, UniqueVar179),
   teamplaysagainstteam(A, UniqueVar73),
   teamplaysagainstteam(UniqueVar126, A),
   plays(B, UniqueVar158),
   plays(B, UniqueVar200),
   teamplaysagainstteam(UniqueVar204, A),
   teamplaysinleague(UniqueVar9, UniqueVar10),
   athleteplayssport(UniqueVar145, Underscore),
   teamplaysagainstteam(UniqueVar71, A),
   plays(B, UniqueVar216),
   athleteplaysforteam(Underscore, UniqueVar107),
   teamplaysinleague(UniqueVar156, UniqueVar157),
   teamplaysagainstteam(A, UniqueVar220),
   teamplaysagainstteam(UniqueVar23, A),
   teamplaysinleague(A, UniqueVar4),
   plays(B, UniqueVar9),
   teamplaysinleague(UniqueVar82, UniqueVar83),
   teamplaysinleague(UniqueVar224, UniqueVar225),
   plays(B, UniqueVar35),
   teamplaysinleague(UniqueVar164, UniqueVar165),
   teamplaysinleague(UniqueVar17, UniqueVar18),
   teamplaysinleague(A, UniqueVar72),
   teamplaysagainstteam(UniqueVar109, A),
   athleteplaysforteam(UniqueVar89, A),
   plays(B, UniqueVar6),
   plays(B, UniqueVar57),
   plays(B, UniqueVar59),
   athleteplayssport(UniqueVar133, Underscore),
   teamplaysinleague(A, UniqueVar87),
   teamplaysinleague(UniqueVar59, UniqueVar60),
   plays(B, UniqueVar180),
   plays(B, UniqueVar34),
   teamplaysinleague(A, UniqueVar28),
   teamplaysinleague(UniqueVar108, Underscore),
   teamplaysagainstteam(A, UniqueVar56),
   teamplaysagainstteam(A, UniqueVar69),
   teamplaysagainstteam(UniqueVar174, A),
   athleteplaysforteam(Underscore, UniqueVar71),
   athleteplaysforteam(Underscore, UniqueVar74),
   athleteplaysforteam(UniqueVar77, A),
   teamplaysagainstteam(A, UniqueVar19),
   plays(B, UniqueVar7),
   teamplaysagainstteam(A, UniqueVar148),
   teamplaysagainstteam(A, UniqueVar168),
   plays(B, UniqueVar122),
   teamplaysagainstteam(UniqueVar11, A),
   plays(B, UniqueVar182),
   teamplaysagainstteam(A, UniqueVar195),
   teamplaysinleague(A, UniqueVar48),
   teamplaysinleague(A, UniqueVar50),
   teamplaysagainstteam(UniqueVar160, A),
   teamplaysagainstteam(A, UniqueVar55),
   plays(B, UniqueVar76),
   plays(B, UniqueVar96),
   athleteplaysforteam(UniqueVar181, A),
   plays(B, UniqueVar204),
   teamplaysinleague(UniqueVar35, UniqueVar36),
   teamplaysagainstteam(UniqueVar107, A),
   plays(B, UniqueVar33),
   teamplaysagainstteam(A, UniqueVar205),
   teamplaysinleague(UniqueVar160, UniqueVar161),
   plays(B, UniqueVar153),
   plays(B, UniqueVar90),
   teamplaysagainstteam(A, UniqueVar170),
   plays(B, UniqueVar166),
   teamplaysagainstteam(A, UniqueVar80),
   athleteplayssport(UniqueVar66, Underscore),
   teamplaysinleague(UniqueVar118, Underscore),
   athleteplayssport(UniqueVar208, Underscore),
   teamplaysagainstteam(A, UniqueVar140),
   teamplaysagainstteam(UniqueVar73, A),
   teamplaysinleague(A, UniqueVar115),
   teamplaysinleague(A, UniqueVar167),
   teamplaysinleague(UniqueVar136, UniqueVar137),
   teamplaysagainstteam(A, UniqueVar183),
   teamplaysinleague(UniqueVar196, UniqueVar197),
   teamplaysagainstteam(UniqueVar162, A),
   plays(B, UniqueVar55),
   teamplaysagainstteam(A, UniqueVar114),
   teamplaysagainstteam(UniqueVar110, A),
   teamplaysinleague(UniqueVar6, Underscore),
   athleteplaysforteam(UniqueVar54, A),
   plays(B, UniqueVar124),
   plays(B, UniqueVar17),
   athleteplaysforteam(Underscore, UniqueVar105),
   teamplaysagainstteam(UniqueVar40, A),
   teamplaysinleague(UniqueVar226, UniqueVar227),
   plays(B, UniqueVar73),
   athleteplaysforteam(UniqueVar215, A),
   teamplaysinleague(UniqueVar13, UniqueVar14),
   teamplaysagainstteam(A, UniqueVar65),
   plays(B, UniqueVar214),
   teamplaysinleague(A, UniqueVar36),
   teamplaysagainstteam(UniqueVar7, A),
   teamplaysinleague(A, UniqueVar106),
   teamplaysagainstteam(UniqueVar37, A),
   plays(B, UniqueVar8),
   teamplaysagainstteam(A, UniqueVar27),
   plays(B, UniqueVar168),
   teamplaysagainstteam(A, UniqueVar49),
   teamplaysinleague(UniqueVar202, UniqueVar203),
   teamplaysagainstteam(UniqueVar35, A),
   plays(B, UniqueVar69),
   plays(B, UniqueVar86),
   teamplaysagainstteam(A, UniqueVar22),
   teamplaysinleague(UniqueVar92, UniqueVar93),
   plays(B, UniqueVar92),
   teamplaysagainstteam(A, UniqueVar135),
   teamplaysagainstteam(A, UniqueVar1),
   athleteplaysforteam(Underscore, UniqueVar210),
   teamplaysinleague(UniqueVar222, UniqueVar223),
   plays(B, UniqueVar171),
   athleteplayssport(UniqueVar20, Underscore),
   teamplaysagainstteam(UniqueVar5, A),
   plays(B, UniqueVar148),
   plays(B, UniqueVar120),
   teamplaysinleague(A, UniqueVar139),
   teamplaysinleague(UniqueVar198, UniqueVar199),
   teamplaysagainstteam(UniqueVar82, A),
   plays(B, UniqueVar56),
   teamplaysinleague(A, UniqueVar2),
   athleteplaysforteam(Underscore, UniqueVar116),
   teamplaysagainstteam(A, UniqueVar184),
   plays(B, UniqueVar231),
   plays(B, UniqueVar196),
   teamplaysinleague(UniqueVar112, UniqueVar113),
   teamplaysagainstteam(UniqueVar214, A),
   plays(B, UniqueVar98),
   teamplaysagainstteam(UniqueVar184, A),
   plays(B, UniqueVar11),
   athleteplaysforteam(Underscore, A),
   plays(B, UniqueVar220),
   teamplaysinleague(A, UniqueVar143),
   teamplaysagainstteam(UniqueVar80, A),
   athleteplaysforteam(Underscore, UniqueVar119),
   teamplaysagainstteam(A, UniqueVar147),
   plays(B, UniqueVar103),
   teamplaysinleague(UniqueVar116, UniqueVar117),
   plays(B, UniqueVar162),
   plays(B, UniqueVar42),
   teamplaysagainstteam(A, UniqueVar39),
   plays(B, UniqueVar190),
   plays(B, UniqueVar74),
   teamplaysinleague(UniqueVar103, UniqueVar104),
   plays(B, Underscore),
   athleteplayssport(UniqueVar215, B),
   teamplaysinleague(UniqueVar69, UniqueVar70),
   plays(B, UniqueVar150),
   athleteplaysforteam(Underscore, UniqueVar209),
   plays(B, UniqueVar102),
   athleteplaysforteam(Underscore, UniqueVar37),
   plays(B, UniqueVar152),
   teamplaysagainstteam(UniqueVar150, A),
   athleteplaysforteam(Underscore, UniqueVar5),
   plays(B, UniqueVar134),
   teamplaysinleague(UniqueVar188, UniqueVar189),
   teamplaysagainstteam(A, UniqueVar230),
   athleteplayssport(UniqueVar206, Underscore),
   teamplaysinleague(UniqueVar11, UniqueVar12),
   plays(B, UniqueVar109),
   teamplaysinleague(A, UniqueVar16),
   plays(B, UniqueVar186),
   teamplaysagainstteam(A, UniqueVar180),
   teamplaysinleague(UniqueVar40, Underscore),
   athleteplaysforteam(Underscore, UniqueVar1),
   teamplaysinleague(UniqueVar45, UniqueVar46),
   teamplaysagainstteam(UniqueVar47, A),
   teamplaysinleague(A, UniqueVar203),
   teamplaysinleague(A, UniqueVar52),
   teamplaysinleague(A, UniqueVar26),
   teamplaysinleague(UniqueVar43, UniqueVar44),
   athleteplaysforteam(Underscore, UniqueVar7),
   teamplaysinleague(UniqueVar37, UniqueVar38),
   teamplaysinleague(UniqueVar98, UniqueVar99),
   teamplaysinleague(UniqueVar148, UniqueVar149),
   teamplaysinleague(UniqueVar49, UniqueVar50),
   athleteplaysforteam(Underscore, UniqueVar39),
   teamplaysagainstteam(A, UniqueVar35),
   teamplaysinleague(UniqueVar15, UniqueVar16),
   teamplaysinleague(UniqueVar74, Underscore),
   teamplaysagainstteam(UniqueVar118, A),
   athleteplaysforteam(Underscore, UniqueVar153),
   teamplaysagainstteam(UniqueVar121, A),
   plays(B, UniqueVar140),
   plays(B, UniqueVar3),
   teamplaysinleague(UniqueVar119, Underscore),
   athleteplaysforteam(UniqueVar229, A),
   teamplaysinleague(A, UniqueVar24),
   teamplaysinleague(UniqueVar80, UniqueVar81),
   plays(B, UniqueVar107),
   athleteplaysforteam(Underscore, UniqueVar40),
   athleteplayssport(UniqueVar193, Underscore),
   teamplaysagainstteam(A, UniqueVar132),
   teamplaysagainstteam(UniqueVar212, A),
   plays(B, UniqueVar213),
   teamplaysinleague(A, UniqueVar99),
   teamplaysagainstteam(UniqueVar105, A),
   athleteplaysforteam(Underscore, UniqueVar35),
   teamplaysinleague(UniqueVar166, UniqueVar167),
   plays(B, UniqueVar75),
   teamplaysagainstteam(A, UniqueVar188),
   plays(B, UniqueVar108),
   plays(B, UniqueVar226),
   athleteplaysforteam(Underscore, UniqueVar41),
   athleteplayssport(UniqueVar32, Underscore),
   teamplaysinleague(UniqueVar61, UniqueVar62),
   athleteplaysforteam(UniqueVar208, A),
   teamplaysagainstteam(A, UniqueVar33),
   teamplaysagainstteam(UniqueVar231, A),
   teamplaysinleague(A, UniqueVar64),
   teamplaysagainstteam(UniqueVar120, A),
   teamplaysinleague(A, UniqueVar185),
   teamplaysagainstteam(A, UniqueVar196),
   teamplaysagainstteam(UniqueVar3, A),
   teamplaysinleague(UniqueVar130, UniqueVar131),
   plays(B, UniqueVar84),
   teamplaysagainstteam(A, UniqueVar5),
   plays(B, UniqueVar164),
   plays(B, UniqueVar27),
   plays(B, UniqueVar192),
   athleteplaysforteam(Underscore, UniqueVar154),
   teamplaysinleague(UniqueVar172, UniqueVar173),
   teamplaysagainstteam(UniqueVar69, A),
   teamplaysinleague(A, UniqueVar70),
   teamplaysagainstteam(A, UniqueVar102),
   plays(B, UniqueVar118),
   teamplaysagainstteam(A, UniqueVar92),
   plays(B, UniqueVar155),
   athleteplaysforteam(Underscore, UniqueVar114),
   teamplaysinleague(UniqueVar29, UniqueVar30),
   teamplaysagainstteam(UniqueVar220, A),
   plays(B, UniqueVar136),
   plays(B, UniqueVar100),
   teamplaysinleague(UniqueVar158, UniqueVar159),
   teamplaysinleague(UniqueVar152, Underscore),
   teamplaysinleague(UniqueVar107, Underscore),
   athleteplaysforteam(UniqueVar111, A),
   teamplaysinleague(A, UniqueVar62),
   athleteplayssport(UniqueVar169, Underscore),
   teamplaysinleague(A, UniqueVar163),
   teamplaysagainstteam(A, UniqueVar11),
   teamplaysinleague(A, UniqueVar227),
   athleteplaysforteam(Underscore, UniqueVar3),
   teamplaysinleague(A, UniqueVar187),
   teamplaysagainstteam(Underscore, A),
   teamplaysagainstteam(UniqueVar42, A),
   teamplaysinleague(A, UniqueVar81),
   athleteplayssport(UniqueVar89, Underscore),
   plays(B, UniqueVar147),
   plays(B, UniqueVar110),
   teamplaysinleague(UniqueVar178, UniqueVar179),
   teamplaysagainstteam(UniqueVar138, A),
   teamplaysinleague(A, UniqueVar38),
   teamplaysagainstteam(UniqueVar76, A),
   teamplaysinleague(A, UniqueVar12),
   plays(B, UniqueVar172),
   athleteplaysforteam(Underscore, UniqueVar118),
   plays(B, UniqueVar105),
   teamplaysinleague(UniqueVar190, UniqueVar191),
   plays(B, UniqueVar126),
   teamplaysagainstteam(UniqueVar186, A),
   teamplaysagainstteam(A, UniqueVar160),
   teamplaysinleague(A, UniqueVar123),
   plays(B, UniqueVar144),
   teamplaysinleague(A, UniqueVar79),
   teamplaysinleague(A, UniqueVar191),
   teamplaysinleague(UniqueVar23, UniqueVar24),
   teamplaysinleague(UniqueVar184, UniqueVar185),
   teamplaysinleague(A, UniqueVar83),
   teamplaysagainstteam(A, UniqueVar67),
   plays(B, UniqueVar5),
   teamplaysinleague(UniqueVar218, UniqueVar219),
   teamplaysagainstteam(A, UniqueVar152),
   teamplaysagainstteam(A, UniqueVar53),
   teamplaysinleague(A, UniqueVar189),
   athleteplaysforteam(UniqueVar66, A),
   teamplaysagainstteam(A, UniqueVar146),
   teamplaysagainstteam(A, UniqueVar91),
   teamplaysinleague(UniqueVar162, UniqueVar163),
   teamplaysinleague(A, UniqueVar221),
   teamplaysagainstteam(A, UniqueVar134),
   athleteplaysforteam(Underscore, UniqueVar212),
   teamplaysagainstteam(UniqueVar222, A),
   plays(B, UniqueVar228),
   teamplaysinleague(UniqueVar3, UniqueVar4),
   plays(B, UniqueVar43),
   teamplaysagainstteam(A, UniqueVar118),
   teamplaysinleague(A, UniqueVar159),
   teamplaysinleague(A, UniqueVar197),
   plays(B, UniqueVar23),
   plays(B, UniqueVar25),
   plays(B, UniqueVar45),
   plays(B, UniqueVar78),
   teamplaysinleague(A, UniqueVar177),
   plays(B, UniqueVar222),
   plays(B, UniqueVar174),
   teamplaysinleague(UniqueVar39, Underscore),
   plays(B, UniqueVar39),
   athleteplayssport(UniqueVar77, B),
   plays(B, UniqueVar207),
   teamplaysagainstteam(UniqueVar34, A),
   teamplaysagainstteam(UniqueVar124, A),
   plays(B, UniqueVar130),
   teamplaysinleague(A, UniqueVar58),
   teamplaysinleague(A, UniqueVar10),
   plays(B, UniqueVar71),
   plays(B, UniqueVar142),
   teamplaysagainstteam(UniqueVar45, A),
   plays(B, UniqueVar88),
   teamplaysagainstteam(UniqueVar75, A),
   plays(B, UniqueVar94),
   teamplaysagainstteam(UniqueVar155, A),
   teamplaysinleague(A, UniqueVar211),
   teamplaysagainstteam(A, Underscore),
   teamplaysinleague(A, UniqueVar14),
   plays(B, UniqueVar121),
   teamplaysinleague(A, UniqueVar85),
   teamplaysinleague(A, UniqueVar46),
   teamplaysinleague(A, UniqueVar219),
   teamplaysagainstteam(UniqueVar108, A),
   teamplaysinleague(A, UniqueVar30),
   teamplaysinleague(A, UniqueVar60),
   teamplaysagainstteam(A, UniqueVar107),
   teamplaysinleague(A, UniqueVar44),
   teamplaysagainstteam(UniqueVar94, A),
   teamplaysinleague(A, UniqueVar97),
   teamplaysinleague(UniqueVar138, UniqueVar139),
   plays(B, UniqueVar132),
   teamplaysagainstteam(A, UniqueVar207),
   athleteplaysforteam(Underscore, UniqueVar103),
   plays(B, UniqueVar51),
   teamplaysinleague(UniqueVar84, UniqueVar85),
   athleteplayssport(UniqueVar101, Underscore),
   athleteplaysforteam(Underscore, UniqueVar6),
   teamplaysagainstteam(UniqueVar6, A),
   teamplaysagainstteam(A, UniqueVar136),
   teamplaysinleague(A, UniqueVar165),
   teamplaysagainstteam(A, UniqueVar15),
   plays(B, UniqueVar47),
   teamplaysinleague(A, UniqueVar141),
   athleteplaysforteam(Underscore, UniqueVar69),
   teamplaysagainstteam(UniqueVar119, A),
   teamplaysinleague(UniqueVar126, UniqueVar127),
   teamplaysagainstteam(UniqueVar114, A),
   teamplaysagainstteam(UniqueVar198, A),
   teamplaysinleague(UniqueVar200, UniqueVar201),
   teamplaysinleague(UniqueVar73, Underscore),
   teamplaysagainstteam(UniqueVar8, A),
   teamplaysagainstteam(A, UniqueVar192),
   plays(B, UniqueVar210),
   athleteplayssport(UniqueVar54, Underscore),
   teamplaysinleague(UniqueVar153, Underscore),
   athleteplaysforteam(Underscore, UniqueVar148),
   teamplaysagainstteam(A, UniqueVar45),
   teamplaysinleague(UniqueVar1, UniqueVar2),
   teamplaysinleague(UniqueVar212, Underscore),
   teamplaysinleague(UniqueVar96, UniqueVar97),
   teamplaysinleague(A, UniqueVar157),
   plays(B, UniqueVar188),
   plays(B, UniqueVar63),
   teamplaysinleague(UniqueVar71, UniqueVar72),
   teamplaysinleague(UniqueVar27, UniqueVar28),
   teamplaysinleague(A, UniqueVar129),
   plays(B, UniqueVar178),
   teamplaysinleague(UniqueVar216, UniqueVar217),
   teamplaysinleague(UniqueVar142, UniqueVar143),
   plays(B, UniqueVar116),
   athleteplaysforteam(Underscore, UniqueVar120),
   plays(B, UniqueVar21),
   teamplaysinleague(A, UniqueVar131),
   teamplaysinleague(A, UniqueVar93),
   plays(B, UniqueVar230),
   athleteplayssport(UniqueVar111, B),
   plays(B, UniqueVar160),
   teamplaysinleague(A, UniqueVar217),
   teamplaysinleague(UniqueVar105, UniqueVar106),
   teamplaysagainstteam(UniqueVar210, A),
   plays(B, UniqueVar68),
   teamplaysagainstteam(UniqueVar209, A),
   plays(A, Underscore),
   teamplaysinleague(A, UniqueVar95),
   teamplaysinleague(A, UniqueVar127)]).

%%%%%  WILL-Produced Tree Combined @ 10:53:50 6/4/18.  [Using 29,326,272 memory cells.]  %%%%%

% FOR teamplayssport(a, b):
%   if ( plays(c, a) )
%   then return -2.908816657319785;  // std dev = 1.57e-05, 1,760.000 (wgt'ed) examples reached here.  /* #neg=1,760 */
%   else if ( athleteplaysforteam(d, a) )
%   | then if ( athleteplayssport(d, b) )
%   | | then if ( teamplaysinleague(a, e) )
%   | | | then return 1.2023246060563015;  // std dev = 4.166, 880.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=840 */
%   | | | else return 3.144777735053166;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return -0.0321741565618174;  // std dev = 8.157, 4,460.000 (wgt'ed) examples reached here.  /* #neg=3,520 #pos=940 */
%   | else if ( teamplaysagainstteam(a, f) )
%   | | then if ( plays(b, f) )
%   | | | then if ( athleteplaysforteam(g, f) )
%   | | | | then return 0.7816277581996359;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   | | | | else return 17.09118334268025;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | | else if ( plays(h, f) )
%   | | | | then return -0.04839647846969698;  // std dev = 8.315, 540.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=120 */
%   | | | | else if ( teamplaysinleague(a, i) )
%   | | | | | then return 0.49922207518316153;  // std dev = 306.251, 1,040.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=320 */
%   | | | | | else return 4.25987738562584;  // std dev = 26.186, 140.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=80 */
%   | | else if ( teamplaysinleague(a, j) )
%   | | | then if ( plays(b, k) )
%   | | | | then return 0.565919269674517;  // std dev = 9.986, 1,140.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=600 */
%   | | | | else return -2.9088166573197496;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
%   | | | else if ( plays(b, l) )
%   | | | | then return 0.47054087740544254;  // std dev = 9.955, 1,060.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=580 */
%   | | | | else return -2.9088166573197496;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */


% Clauses:

teamplayssport(a, b, -2.908816657319785) :- 
     plays(c, a), 
     !. // Clause #1.

teamplayssport(a, b, 1.2023246060563015) :- 
     athleteplaysforteam(c, a), 
     athleteplayssport(c, b), 
     teamplaysinleague(a, d), 
     !. // Clause #2.

teamplayssport(a, b, 3.144777735053166) :- 
     athleteplaysforteam(c, a), 
     athleteplayssport(c, b), 
     !. // Clause #3.

teamplayssport(a, b, -0.0321741565618174) :- 
     athleteplaysforteam(c, a), 
     !. // Clause #4.

teamplayssport(a, b, 0.7816277581996359) :- 
     teamplaysagainstteam(a, c), 
     plays(b, c), 
     athleteplaysforteam(d, c), 
     !. // Clause #5.

teamplayssport(a, b, 17.09118334268025) :- 
     teamplaysagainstteam(a, c), 
     plays(b, c), 
     !. // Clause #6.

teamplayssport(a, b, -0.04839647846969698) :- 
     teamplaysagainstteam(a, c), 
     plays(d, c), 
     !. // Clause #7.

teamplayssport(a, b, 0.49922207518316153) :- 
     teamplaysagainstteam(a, c), 
     teamplaysinleague(a, d), 
     !. // Clause #8.

teamplayssport(a, b, 4.25987738562584) :- 
     teamplaysagainstteam(a, c), 
     !. // Clause #9.

teamplayssport(a, b, 0.565919269674517) :- 
     teamplaysinleague(a, c), 
     plays(b, d), 
     !. // Clause #10.

teamplayssport(a, b, -2.9088166573197496) :- 
     teamplaysinleague(a, c), 
     !. // Clause #11.

teamplayssport(a, b, 0.47054087740544254) :- 
     plays(b, c), 
     !. // Clause #12.

teamplayssport(a, b, -2.9088166573197496) :- !. // Clause #13.


% The flattened versions of these clauses:

flattened_plays(Underscore, A) ^
   ! => 
   teamplayssport(A, Underscore, -2.908816657319785). // Flattened version of clause #1.

flattened_athleteplaysforteam(UniqueVar232, A) ^
   athleteplayssport(UniqueVar232, B) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, B, 1.2023246060563015). // Flattened version of clause #2.

flattened_athleteplaysforteam(UniqueVar233, A) ^
   athleteplayssport(UniqueVar233, B) ^
   ! => 
   teamplayssport(A, B, 3.144777735053166). // Flattened version of clause #3.

flattened_athleteplaysforteam(Underscore, A) ^
   ! => 
   teamplayssport(A, Underscore, -0.0321741565618174). // Flattened version of clause #4.

flattened_teamplaysagainstteam(A, UniqueVar234) ^
   plays(B, UniqueVar234) ^
   athleteplaysforteam(Underscore, UniqueVar234) ^
   ! => 
   teamplayssport(A, B, 0.7816277581996359). // Flattened version of clause #5.

flattened_teamplaysagainstteam(A, UniqueVar235) ^
   plays(B, UniqueVar235) ^
   ! => 
   teamplayssport(A, B, 17.09118334268025). // Flattened version of clause #6.

flattened_teamplaysagainstteam(A, UniqueVar236) ^
   plays(Underscore, UniqueVar236) ^
   ! => 
   teamplayssport(A, Underscore, -0.04839647846969698). // Flattened version of clause #7.

flattened_teamplaysagainstteam(A, Underscore) ^
   teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, Underscore, 0.49922207518316153). // Flattened version of clause #8.

flattened_teamplaysagainstteam(A, Underscore) ^
   ! => 
   teamplayssport(A, Underscore, 4.25987738562584). // Flattened version of clause #9.

flattened_teamplaysinleague(A, Underscore) ^
   plays(B, Underscore) ^
   ! => 
   teamplayssport(A, B, 0.565919269674517). // Flattened version of clause #10.

flattened_teamplaysinleague(A, Underscore) ^
   ! => 
   teamplayssport(A, Underscore, -2.9088166573197496). // Flattened version of clause #11.

flattened_plays(A, Underscore) ^
   ! => 
   teamplayssport(Underscore, A, 0.47054087740544254). // Flattened version of clause #12.

flattened_! => 
   teamplayssport(Underscore, Underscore, -2.9088166573197496). // Flattened version of clause #13.


% The unique flattened literals:
%   athleteplaysforteam(Underscore, UniqueVar234)
%   plays(Underscore, A)
%   plays(B, UniqueVar235)
%   teamplaysagainstteam(A, UniqueVar234)
%   plays(B, UniqueVar234)
%   athleteplaysforteam(Underscore, A)
%   athleteplaysforteam(UniqueVar232, A)
%   teamplaysinleague(A, Underscore)
%   plays(Underscore, UniqueVar236)
%   athleteplayssport(UniqueVar232, B)
%   athleteplayssport(UniqueVar233, B)
%   plays(B, Underscore)
%   athleteplaysforteam(UniqueVar233, A)
%   teamplaysagainstteam(A, UniqueVar236)
%   teamplaysagainstteam(A, UniqueVar235)
%   teamplaysagainstteam(A, Underscore)
%   plays(A, Underscore)
