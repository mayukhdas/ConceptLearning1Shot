% Running on host: DESKTOP-K98RL7C

% Creating string handler #1.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% getInputArgWithDefaultValue: args=[.\Toy-Cancer\train/train_pos.txt, .\Toy-Cancer\train/train_neg.txt, .\Toy-Cancer\train/train_bk.txt, .\Toy-Cancer\train/train_facts.txt]
%  for N=0: args[N]=.\Toy-Cancer\train/train_pos.txt

% getInputArgWithDefaultValue: args=[.\Toy-Cancer\train/train_pos.txt, .\Toy-Cancer\train/train_neg.txt, .\Toy-Cancer\train/train_bk.txt, .\Toy-Cancer\train/train_facts.txt]
%  for N=1: args[N]=.\Toy-Cancer\train/train_neg.txt

% getInputArgWithDefaultValue: args=[.\Toy-Cancer\train/train_pos.txt, .\Toy-Cancer\train/train_neg.txt, .\Toy-Cancer\train/train_bk.txt, .\Toy-Cancer\train/train_facts.txt]
%  for N=2: args[N]=.\Toy-Cancer\train/train_bk.txt

% getInputArgWithDefaultValue: args=[.\Toy-Cancer\train/train_pos.txt, .\Toy-Cancer\train/train_neg.txt, .\Toy-Cancer\train/train_bk.txt, .\Toy-Cancer\train/train_facts.txt]
%  for N=3: args[N]=.\Toy-Cancer\train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../toy_cancer_bk.txt'.

% Switching to VarIndicator = uppercase.

% Switching to standard-logic notation for variables; previous setting = uppercase

% Switching to VarIndicator = lowercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = lowercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = lowercase *****

% LoadAllModes() called.  Currently loaded modes: []

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = lowercase.

% Switching to Prolog notation for variables; previous setting = lowercase

% Switching to VarIndicator = uppercase.

% Switching to VarIndicator = lowercase.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 15 facts.
% Have read 4 examples from '.\Toy-Cancer\train' [.\Toy-Cancer\train/train*].
% Have read 2 examples from '.\Toy-Cancer\train' [.\Toy-Cancer\train/train*].

%  LearnOneClause initialized.

% NEW target:                 cancer(a)
%  targetPred:                cancer/1
%  targetArgTypes:            signature = [Const], types = [+Person]
%  targets:                   [cancer(a)]
%  targetPredicates:          [cancer/1]
%  targetArgSpecs:            [[a[+Person]]]
%  variablesInTargets:        [[a]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 1 milliseconds
% Time to collect examples: 0 seconds

% Read 4 pos examples and 2 neg examples.
% Time to init learnOneClause: 6 milliseconds
%   Add combo #1.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(101)/MinPos(0.99)/MaxNegs(-1.00)
%   Add combo #2.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(101)/MinPos(0.99)/MaxNegs(-1.00)
%   Add combo #3.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(101)/MinPos(0.99)/MaxNegs(-1.00)
%   Add combo #4.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(101)/MinPos(0.99)/MaxNegs(-1.00)
%   Add combo #5.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(101)/MinPos(0.99)/MaxNegs(-1.00)
%   Add combo #6.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(101)/MinPos(0.99)/MaxNegs(-1.00)
%   Add combo #7.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9965)/MaxExpands(10)/MaxCreates(100)/MinPos(0.14)/MaxNegs(-1.00)
%   Add combo #8.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9940)/MaxExpands(10)/MaxCreates(100)/MinPos(0.14)/MaxNegs(-1.00)
%   Add combo #9.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9965)/MaxExpands(10)/MaxCreates(100)/MinPos(0.14)/MaxNegs(-1.00)
%   Add combo #10.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9940)/MaxExpands(10)/MaxCreates(100)/MinPos(0.14)/MaxNegs(-1.00)
%   Add combo #11.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9965)/MaxExpands(10)/MaxCreates(100)/MinPos(0.14)/MaxNegs(-1.00)
%   Add combo #12.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9940)/MaxExpands(10)/MaxCreates(100)/MinPos(0.14)/MaxNegs(-1.00)
%   Add combo #13.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9965)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%   Add combo #14.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9940)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%   Add combo #15.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9965)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%   Add combo #16.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9940)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%   Add combo #17.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9965)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%   Add combo #18.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9940)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #19.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(10)/MaxCreates(110)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #20.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(10)/MaxCreates(110)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #21.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(10)/MaxCreates(110)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #22.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(10)/MaxCreates(110)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #23.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(10)/MaxCreates(110)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #24.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(10)/MaxCreates(110)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #25.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(10)/MaxCreates(105)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #26.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(10)/MaxCreates(105)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #27.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(10)/MaxCreates(105)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #28.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(10)/MaxCreates(105)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #29.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(10)/MaxCreates(105)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #30.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(10)/MaxCreates(105)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #31.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #32.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #33.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #34.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #35.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #36.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(10)/MaxCreates(100)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #37.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(100)/MaxCreates(1100)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #38.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(100)/MaxCreates(1100)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #39.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(100)/MaxCreates(1100)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #40.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(100)/MaxCreates(1100)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #41.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(100)/MaxCreates(1100)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #42.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(100)/MaxCreates(1100)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #43.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(100)/MaxCreates(1055)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #44.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(100)/MaxCreates(1055)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #45.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(100)/MaxCreates(1055)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #46.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(100)/MaxCreates(1055)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #47.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(100)/MaxCreates(1055)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #48.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(100)/MaxCreates(1055)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #49.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(100)/MaxCreates(1009)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #50.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(100)/MaxCreates(1009)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #51.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(100)/MaxCreates(1009)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #52.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(100)/MaxCreates(1009)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #53.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(100)/MaxCreates(1009)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #54.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(100)/MaxCreates(1009)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #55.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(1000)/MaxCreates(11000)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #56.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(1000)/MaxCreates(11000)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #57.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(1000)/MaxCreates(11000)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #58.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(1000)/MaxCreates(11000)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #59.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(1000)/MaxCreates(11000)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.9 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #60.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.9000)/MaxExpands(1000)/MaxCreates(11000)/MinPos(0.90)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #61.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(1000)/MaxCreates(10550)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #62.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(1000)/MaxCreates(10550)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #63.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(1000)/MaxCreates(10550)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #64.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(1000)/MaxCreates(10550)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #65.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(1000)/MaxCreates(10550)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.9450000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #66.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.9450)/MaxExpands(1000)/MaxCreates(10550)/MinPos(0.14)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #67.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(1000)/MaxCreates(10099)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #68.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(1000)/MaxCreates(10099)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #69.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(1000)/MaxCreates(10099)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #70.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(1000)/MaxCreates(10099)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #71.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(1000)/MaxCreates(10099)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.9900000000000001 but these should not be different.
% setMinF1toStop = 0.9
%   Add combo #72.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.9900)/MaxExpands(1000)/MaxCreates(10099)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #73.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(10)/MaxCreates(125)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #74.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(10)/MaxCreates(125)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #75.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(10)/MaxCreates(125)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #76.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(10)/MaxCreates(125)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #77.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(10)/MaxCreates(125)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #78.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(10)/MaxCreates(125)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #79.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(10)/MaxCreates(121)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #80.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(10)/MaxCreates(121)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #81.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(10)/MaxCreates(121)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #82.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(10)/MaxCreates(121)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #83.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(10)/MaxCreates(121)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #84.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(10)/MaxCreates(121)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #85.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(10)/MaxCreates(117)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #86.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(10)/MaxCreates(117)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #87.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(10)/MaxCreates(117)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #88.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(10)/MaxCreates(117)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #89.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(10)/MaxCreates(117)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #90.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(10)/MaxCreates(117)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #91.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(100)/MaxCreates(1250)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #92.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(100)/MaxCreates(1250)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #93.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(100)/MaxCreates(1250)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #94.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(100)/MaxCreates(1250)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #95.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(100)/MaxCreates(1250)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #96.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(100)/MaxCreates(1250)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #97.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(100)/MaxCreates(1212)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #98.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(100)/MaxCreates(1212)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #99.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(100)/MaxCreates(1212)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #100.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(100)/MaxCreates(1212)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #101.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(100)/MaxCreates(1212)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #102.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(100)/MaxCreates(1212)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #103.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(100)/MaxCreates(1174)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #104.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(100)/MaxCreates(1174)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #105.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(100)/MaxCreates(1174)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #106.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(100)/MaxCreates(1174)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #107.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(100)/MaxCreates(1174)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #108.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(100)/MaxCreates(1174)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #109.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(1000)/MaxCreates(12500)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #110.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(1000)/MaxCreates(12500)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #111.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(1000)/MaxCreates(12500)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #112.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(1000)/MaxCreates(12500)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #113.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(1000)/MaxCreates(12500)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.75 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #114.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7500)/MaxExpands(1000)/MaxCreates(12500)/MinPos(0.75)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #115.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(1000)/MaxCreates(12124)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #116.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(1000)/MaxCreates(12124)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #117.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(1000)/MaxCreates(12124)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #118.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(1000)/MaxCreates(12124)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #119.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(1000)/MaxCreates(12124)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.7875000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #120.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7875)/MaxExpands(1000)/MaxCreates(12124)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #121.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(1000)/MaxCreates(11749)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #122.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(1000)/MaxCreates(11749)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #123.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(1000)/MaxCreates(11749)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #124.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(1000)/MaxCreates(11749)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #125.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(1000)/MaxCreates(11749)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.8250000000000001 but these should not be different.
% setMinF1toStop = 0.75
%   Add combo #126.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.8250)/MaxExpands(1000)/MaxCreates(11749)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #127.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(10)/MaxCreates(130)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #128.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(10)/MaxCreates(129)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #129.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(10)/MaxCreates(130)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #130.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(10)/MaxCreates(129)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #131.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(10)/MaxCreates(130)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #132.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(10)/MaxCreates(129)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #133.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(10)/MaxCreates(126)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #134.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(10)/MaxCreates(126)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #135.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(10)/MaxCreates(126)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #136.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(10)/MaxCreates(126)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #137.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(10)/MaxCreates(126)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #138.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(10)/MaxCreates(126)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #139.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(10)/MaxCreates(123)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #140.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(10)/MaxCreates(122)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #141.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(10)/MaxCreates(123)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #142.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(10)/MaxCreates(122)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #143.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(10)/MaxCreates(123)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #144.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(10)/MaxCreates(122)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #145.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(100)/MaxCreates(1301)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #146.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(100)/MaxCreates(1299)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #147.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(100)/MaxCreates(1301)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #148.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(100)/MaxCreates(1299)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #149.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(100)/MaxCreates(1301)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #150.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(100)/MaxCreates(1299)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #151.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(100)/MaxCreates(1267)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #152.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(100)/MaxCreates(1263)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #153.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(100)/MaxCreates(1267)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #154.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(100)/MaxCreates(1263)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #155.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(100)/MaxCreates(1267)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #156.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(100)/MaxCreates(1263)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #157.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(100)/MaxCreates(1232)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #158.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(100)/MaxCreates(1228)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #159.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(100)/MaxCreates(1232)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #160.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(100)/MaxCreates(1228)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #161.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(100)/MaxCreates(1232)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #162.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(100)/MaxCreates(1228)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #163.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(1000)/MaxCreates(13019)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #164.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(1000)/MaxCreates(12990)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #165.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(1000)/MaxCreates(13019)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #166.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(1000)/MaxCreates(12990)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7001, oldValue = 0.99 and newValue = 0.6980066445182724 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #167.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(1)/MinPrec(0.6980)/MaxExpands(1000)/MaxCreates(13019)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007001, oldValue = 0.99 and newValue = 0.7009966777408638 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #168.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(1)/MinPrec(0.7010)/MaxExpands(1000)/MaxCreates(12990)/MinPos(0.70)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #169.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(1000)/MaxCreates(12670)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #170.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(1000)/MaxCreates(12639)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #171.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(1000)/MaxCreates(12670)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #172.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(1000)/MaxCreates(12639)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7003, oldValue = 0.9965087281795512 and newValue = 0.732906976744186 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #173.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7329)/MaxExpands(1000)/MaxCreates(12670)/MinPos(0.10)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007003, oldValue = 0.9940298507462688 and newValue = 0.736046511627907 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #174.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(3)/MinPrec(0.7360)/MaxExpands(1000)/MaxCreates(12639)/MinPos(0.11)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #175.
%     MinRelevance(null)/MaxLen(1)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(1000)/MaxCreates(12321)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1001015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #176.
%     MinRelevance(null)/Flipped(true)/MaxLen(1)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(1000)/MaxCreates(12289)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 3015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #177.
%     MinRelevance(null)/MaxLen(3)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(1000)/MaxCreates(12321)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1003015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #178.
%     MinRelevance(null)/Flipped(true)/MaxLen(3)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(1000)/MaxCreates(12289)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 7015, oldValue = 0.9965087281795512 and newValue = 0.7678073089700997 but these should not be different.
% setMinF1toStop = 0.6980066445182724
%   Add combo #179.
%     MinRelevance(null)/MaxLen(7)/MaxClauses(15)/MinPrec(0.7678)/MaxExpands(1000)/MaxCreates(12321)/MinPos(0.08)/MaxNegs(-1.00)
%  setPreviousMinPrecision: for key = 1007015, oldValue = 0.9940298507462688 and newValue = 0.7710963455149503 but these should not be different.
% setMinF1toStop = 0.7009966777408638
%   Add combo #180.
%     MinRelevance(null)/Flipped(true)/MaxLen(7)/MaxClauses(15)/MinPrec(0.7711)/MaxExpands(1000)/MaxCreates(12289)/MinPos(0.08)/MaxNegs(-1.00)

% Have 180 Onion combinations to try.
LAYERS ################## 180

%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #1 (1 of 180).
% (The ONION has been running for a total of 93.00ms
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #1, minPrec=0.99, maxC=1, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Bob)

% LearnOneClause Parameters:
%   Targets (1):
%    cancer(+Person)
%  Modes (40):
%    friends(+Person, -Person),
%    friends(-Person, +Person),
%    smokes(+Person),
%    num_of_smoking_friends(+Person, #Number),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #1 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (1).

% ******************************************

% Finished fold 0 (0.50s):

% Created a total of 42 clauses and expanded 10 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 44 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990
% New best score found (on trainset, so scaled by 0.95): 0.812

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #2 (2 of 180).
% (The ONION has been running for a total of 617.00ms
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #2, flipped, minPrec=0.99, maxC=1, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #2 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #3 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************

% Finished fold 0 (0.34s):

% Created a total of 63 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #3 (3 of 180).
% (The ONION has been running for a total of 962.00ms
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #3, minPrec=0.99, maxC=1, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Alice)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #4 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (1).

% ******************************************

% Finished fold 0 (0.25s):

% Created a total of 86 clauses and expanded 10 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 44 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #4 (4 of 180).
% (The ONION has been running for a total of 1.22s
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #4, flipped, minPrec=0.99, maxC=1, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #5 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #6 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************

% Finished fold 0 (0.23s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #5 (5 of 180).
% (The ONION has been running for a total of 1.46s
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #5, minPrec=0.99, maxC=1, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Alice)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #7 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (1).

% ******************************************

% Finished fold 0 (0.08s):

% Created a total of 86 clauses and expanded 10 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 44 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #6 (6 of 180).
% (The ONION has been running for a total of 1.53s
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 101
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9900
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9900
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #6, flipped, minPrec=0.99, maxC=1, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #8 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #9 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************

% Finished fold 0 (0.10s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #7 (7 of 180).
% (The ONION has been running for a total of 1.64s
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #7, minPrec=1.00, maxC=3, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #10 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.9950):
%  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]
% Have selected pos example #1 as the next seed: cancer(Bob)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #11 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #2, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.16s):

% Created a total of 84 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1420
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #8 (8 of 180).
% (The ONION has been running for a total of 1.80s
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1420
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #8, flipped, minPrec=0.99, maxC=3, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #12 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #13 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.12s):

% Created a total of 62 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #9 (9 of 180).
% (The ONION has been running for a total of 1.92s
%  and has 12.00h left;
%  36.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #9, minPrec=1.00, maxC=3, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #14 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.9950):
%  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]
% Have selected pos example #1 as the next seed: cancer(Bob)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #15 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #2, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.18s):

% Created a total of 163 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1420
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #10 (10 of 180).
% (The ONION has been running for a total of 2.10s
%  and has 12.00h left;
%  40.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1420
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #10, flipped, minPrec=0.99, maxC=3, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #16 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #17 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.08s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #11 (11 of 180).
% (The ONION has been running for a total of 2.19s
%  and has 12.00h left;
%  44.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #11, minPrec=1.00, maxC=3, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #18 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.9950):
%  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]
% Have selected pos example #1 as the next seed: cancer(Bob)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #19 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #2, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.22s):

% Created a total of 163 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1424
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1420
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #12 (12 of 180).
% (The ONION has been running for a total of 2.41s
%  and has 12.00h left;
%  48.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1420
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #12, flipped, minPrec=0.99, maxC=3, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #20 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #21 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.24s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #13 (13 of 180).
% (The ONION has been running for a total of 2.65s
%  and has 12.00h left;
%  52.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #13, minPrec=1.00, maxC=15, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Alice)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #22 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #23 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.9950):
%  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.23s):

% Created a total of 83 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.0994
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #14 (14 of 180).
% (The ONION has been running for a total of 2.88s
%  and has 12.00h left;
%  56.00m have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 1
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0994
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #14, flipped, minPrec=0.99, maxC=15, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #24 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #25 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.10s):

% Created a total of 62 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #15 (15 of 180).
% (The ONION has been running for a total of 2.98s
%  and has 12.00h left;
%  60.00m have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #15, minPrec=1.00, maxC=15, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #26 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.9950):
%  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]
% Have selected pos example #1 as the next seed: cancer(Bob)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #27 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #2, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.10s):

% Created a total of 163 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.0994
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #16 (16 of 180).
% (The ONION has been running for a total of 3.08s
%  and has 12.00h left;
%  1.07h have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 3
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0994
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #16, flipped, minPrec=0.99, maxC=15, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #28 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #29 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.12s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #17 (17 of 180).
% (The ONION has been running for a total of 3.20s
%  and has 12.00h left;
%  1.13h have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #17, minPrec=1.00, maxC=15, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #2 as the next seed: cancer(Chuck)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #30 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #31 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.9950):
%  num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.07s):

% Created a total of 163 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0997
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9965
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.990

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.0994
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #18 (18 of 180).
% (The ONION has been running for a total of 3.27s
%  and has 12.00h left;
%  1.20h have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 30
%   maxNumberOfClauses = 15
%   maxBodyLength      = 7
%   maxNodesToCreate   = 100
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.0994
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9940
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #18, flipped, minPrec=0.99, maxC=15, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #32 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #33 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have run out of seed positive examples to try.

% ******************************************

% Finished fold 0 (0.07s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #19 (19 of 180).
% (The ONION has been running for a total of 3.34s
%  and has 12.00h left;
%  1.27h have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #19, minPrec=0.90, maxC=1, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #0 as the next seed: cancer(Alice)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #34 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (1).

% ******************************************

% Finished fold 0 (0.04s):

% Created a total of 42 clauses and expanded 10 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 44 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.900

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #20 (20 of 180).
% (The ONION has been running for a total of 3.39s
%  and has 12.00h left;
%  1.33h have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 1
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #20, flipped, minPrec=0.90, maxC=1, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #35 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #36 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************

% Finished fold 0 (0.05s):

% Created a total of 62 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #21 (21 of 180).
% (The ONION has been running for a total of 3.44s
%  and has 12.00h left;
%  1.40h have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #21, minPrec=0.90, maxC=1, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Bob)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #37 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (1).

% ******************************************

% Finished fold 0 (0.11s):

% Created a total of 86 clauses and expanded 10 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 44 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.900

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #22 (22 of 180).
% (The ONION has been running for a total of 3.57s
%  and has 12.00h left;
%  1.47h have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 3
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #22, flipped, minPrec=0.90, maxC=1, maxL=3

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #38 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #39 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************

% Finished fold 0 (0.25s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #23 (23 of 180).
% (The ONION has been running for a total of 3.82s
%  and has 12.00h left;
%  1.53h have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #23, minPrec=0.90, maxC=1, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #2 as the next seed: cancer(Chuck)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #40 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (1).

% ******************************************

% Finished fold 0 (0.04s):

% Created a total of 86 clauses and expanded 10 of them.
% The collection of best clauses per cycle covers 3 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 44 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.


 % Folds = 1, Train: % [TP=3, FP=0, TN=2, FN=1, A=0.83, P=1.00, R=0.75, F1=0.85]
% precision = 0.997 vs trainset min = 0.990
% recall    = 0.748 vs trainset min = 0.990
% accuracy  = 0.831 vs trainset min = 0.990
% F1        = 0.855 vs trainset min = 0.900

%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #24 (24 of 180).
% (The ONION has been running for a total of 3.86s
%  and has 12.00h left;
%  1.60h have been allotted for this setting)
%  The differences from the default settings are:
%   positive and negative examples are flip-flopped
%   maxNumberOfCycles  = 2
%   maxNumberOfClauses = 1
%   maxBodyLength      = 7
%   maxNodesToCreate   = 110
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.9000
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9000
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #24, flipped, minPrec=0.90, maxC=1, maxL=7

% Initializing fold 0.
%   Number of positive TRAIN examples = 2.
%   Number of negative TRAIN examples = 4.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #1 as the next seed: cancer(Earl)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #41 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]
% Have selected pos example #0 as the next seed: cancer(Dan)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]  score = 0.333

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327776021630616
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327675021630616

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327595021630616

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(_, b) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.33275840216306163

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:3] 'friends(a, b) ^ friends(b, a) ^ friends(b, _) => cancer(a).  [covers 2.0/2.0 pos, 4.0/4.0 neg]' score=0.3327494021630616

***** Warning: #42 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = 0.4987):
%  num_of_smoking_friends(a, 1) => cancer(a).  [covers 2.0/2.0 pos, 2.0/4.0 neg]

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of iterations (2).

% ******************************************

% Finished fold 0 (0.06s):

% Created a total of 132 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 0 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 86 search nodes were pruned because they were variant children.

% % There are no clauses in this theory.

%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 105
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1350
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9450
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

***** Warning: Asked to wait *****


%----------------------------
% CONSIDERING Settings #25 (25 of 180).
% (The ONION has been running for a total of 3.93s
%  and has 12.00h left;
%  1.67h have been allotted for this setting)
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 105
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1350
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9450
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
% ILPparameterSettings.helpRun: annotationForSetting = ONION Layer #25, minPrec=0.95, maxC=3, maxL=1

% Initializing fold 0.
%   Number of positive TRAIN examples = 4.
%   Number of negative TRAIN examples = 2.
%   Number of positive EVAL  examples = 0.
%   Number of negative EVAL  examples = 0.
% Have selected pos example #2 as the next seed: cancer(Chuck)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #1_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 1 bad extensions.
% Gleaner: New best node found (score = 0.996668): smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #1_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #1_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #1_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #1_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #43 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% The best node found: smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]

% On cycle #1, the best clause found is:
%      smokes(a) => cancer(a).  [covers 3.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 1 best clauses covers 75.0% of the positive examples and 0.0% of the negatives.}
% Have selected pos example #3 as the next seed: cancer(Fred)

% target           = cancer(a)
% Most-general root: cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]  score = 0.666

% Consider expanding [#1 of outerLoop #2_fold0, bodyLen=0] 'cancer(_).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655563043261232
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 2 bad extensions.
% Gleaner: New best node found (score = 0.995015): num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]

% Consider expanding [#2 of outerLoop #2_fold0, bodyLen=0:1] 'friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#3 of outerLoop #2_fold0, bodyLen=0:1] 'friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655462043261232

% Consider expanding [#4 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655382043261232

% Consider expanding [#5 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(a, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#6 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#7 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, _) ^ friends(_, a) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655361043261232

% Consider expanding [#8 of outerLoop #2_fold0, bodyLen=0:2] 'friends(a, b) ^ friends(_, b) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

% Consider expanding [#9 of outerLoop #2_fold0, bodyLen=0:2] 'friends(b, a) ^ friends(b, _) => cancer(a).  [covers 4.0/4.0 pos, 2.0/2.0 neg]' score=0.6655371043261232

***** Warning: #44 TOO MANY NODES CONSIDERED (i.e., 'expanded') for 'LearnOneClause': nodesConsidered = 10 and maxNodesToConsider = 10. *****


% The best node found: num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]

% The best node found: num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]

% On cycle #2, the best clause found is:
%      num_of_smoking_friends(a, 2) => cancer(a).  [covers 2.0/4.0 pos, 0.0/2.0 neg]
% This clause covers 2 positive examples, of which 1 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.
% The current set of 2 best clauses covers 100.0% of the positive examples and 0.0% of the negatives.}

% ******************************************

% Have stopped ILP's outer loop because have exceeded the minimal fraction (0.9) of positive examples to cover.

% ******************************************

% Finished fold 0 (0.07s):

% Created a total of 84 clauses and expanded 20 of them.
% The collection of best clauses per cycle covers 4 (out of 4) pos and 0 (out of 2) neg examples.
% A total of 88 search nodes were pruned because they were variant children.

% % 
% % Clauses:

% cancer(a) :- smokes(a). // Clause #1.

% cancer(a) :- num_of_smoking_friends(a, 2). // Clause #2.


  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (num_of_smoking_friends(a, 2) => cancer(a))
  currently:  |falseNegatives| = 0 and |trueNegatives| = 2.
  initially:  |falseNegatives| = 4 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (smokes(a) => cancer(a))
  currently:  |falseNegatives| = 1 and |trueNegatives| = 2.
     getWeightedCoverage: apply this clause (num_of_smoking_friends(a, 2) => cancer(a))
  currently:  |falseNegatives| = 0 and |trueNegatives| = 2.

% Trainset results for
%  The differences from the default settings are:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 105
%   maxNodesToConsider = 10
%   minPosCoverage     = 0.1350
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9450
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

 
% Clauses:

cancer(a) :- smokes(a). // Clause #1.

cancer(a) :- num_of_smoking_friends(a, 2). // Clause #2.


 % Folds = 1, Train: % [TP=4, FP=0, TN=2, FN=0, A=1.00, P=1.00, R=1.00, F1=1.00]
% precision = 0.998 vs trainset min = 0.990
% recall    = 0.998 vs trainset min = 0.990
% accuracy  = 0.997 vs trainset min = 0.990
% F1        = 0.998 vs trainset min = 0.900

% Can stop because the theory's (weighted) trainset F1 (1.00) reached the minimum specified (0.90).

% ------------------------------------------------


% Best Theory Chosen by the Onion:
    
%     Clauses:

    cancer(a) :- smokes(a). // Clause #1.

    cancer(a) :- num_of_smoking_friends(a, 2). // Clause #2.



%              Actual
%             Pos   Neg Total
% Model Pos     4     0     4
%       Neg     0     2     2
%     Total     4     2

% False Pos mEst  = 0.0100
% False Neg mEst  = 0.0100

% Accuracy  = 0.9967
% Precision = 0.9975
% Recall    = 0.9975
% F(1)      = 0.9975


% Chosen Parameter Settings:
%   maxNumberOfCycles  = 6
%   maxNumberOfClauses = 3
%   maxBodyLength      = 1
%   maxNodesToCreate   = 105
%   maxNodesToConsider = 10
%   minNumberOfNegExamples = 1
%   minPosCoverage     = 0.1350
%   maxNegCoverage     = -1.0000
%   minPrecision       = 0.9450
%   mEstimatePos       = 0.0100
%   mEstimateNeg       = 0.0100
%   minimum strength   = null
%   map mode '*' to '-'
%   modes in use: [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]
%   all modes:    [friends/2, smokes/1, cancer/1, num_of_smoking_friends/2, addList/2, multiplyList/2, abs/2, minus/2, plus/3, minus/3, mult/3, div/3, allNumbers/1, positiveNumber/1, negativeNumber/1, in0toDot001/1, in0toDot01/1, in0toDot1/1, in0to1/1, in0to10/1, in0to100/1, in0to1000/1, equalWithTolerance/3, greaterOrEqualDifference/3, smallerOrEqualDifference/3, isaEqualTolerance/1, lessThan/2, greaterThan/2, lessThanOrEqual/2, greaterThanOrEqual/2, inBetweenOO/3, inBetweenCO/3, inBetweenOC/3, inBetweenCC/3, memberOfList/2, firstInList/2, restOfList/2, positionInList/3, nthInList/3, lengthOfList/2]

% ------------------------------------------------

% Took 4.006 seconds.
% Executed 57,930 proofs in 2.19 seconds (26419.53 proofs/sec).
% Performed 499,199 unifications while proving Horn clauses.
